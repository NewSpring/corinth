// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`the UserPrayerList component renders a list of prayers 1`] = `
<BVLinearGradient
  colors={
    Array [
      4294967295,
      4294506484,
    ]
  }
  endPoint={
    Object {
      "x": 0.5,
      "y": 1,
    }
  }
  locations={null}
  startPoint={
    Object {
      "x": 0.5,
      "y": 0,
    }
  }
  style={
    Object {
      "borderRadius": 0,
      "flex": null,
      "height": "100%",
      "width": "100%",
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    forceInset={
      Object {
        "top": "always",
      }
    }
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RCTScrollView>
      <View>
        <View
          style={
            Object {
              "paddingHorizontal": 16,
              "paddingVertical": 16,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#505050",
                "fontFamily": "Colfax-Bold",
                "fontSize": 12,
                "lineHeight": 17.28,
              }
            }
          >
            Viewing
          </Text>
          <Text
            style={
              Object {
                "color": "#6bac43",
                "fontFamily": "Colfax-Bold",
                "fontSize": 16,
                "lineHeight": 23.04,
              }
            }
          >
            My Prayers
          </Text>
        </View>
        <View
          style={
            Object {
              "marginBottom": 64,
            }
          }
        >
          <View
            style={
              Object {
                "paddingHorizontal": 16,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              bold={false}
              italic={false}
              style={
                Object {
                  "color": "#303030",
                  "fontFamily": "Colfax-Regular",
                  "fontSize": 16,
                  "lineHeight": 26,
                }
              }
            >
              You have not submitted any prayers. Go back and add one!
            </Text>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </RCTSafeAreaView>
  <View
    pointerEvents="box-none"
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingHorizontal": 16,
        "paddingVertical": 16,
        "position": "absolute",
        "top": 0,
        "width": "100%",
      }
    }
  >
    <RNSVGSvgView
      align="xMidYMid"
      bbHeight={32}
      bbWidth={32}
      fill="#303030"
      height={32}
      meetOrSlice={0}
      minX={0}
      minY={0}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          undefined,
          null,
          Object {
            "flex": 0,
            "height": 32,
            "width": 32,
          },
        ]
      }
      vbHeight={24}
      vbWidth={24}
      width={32}
    >
      <RNSVGGroup
        fill={
          Array [
            0,
            4281348144,
          ]
        }
        fillOpacity={1}
        fillRule={1}
        font={Object {}}
        matrix={
          Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ]
        }
        opacity={1}
        originX={0}
        originY={0}
        propList={
          Array [
            "fill",
          ]
        }
        rotation={0}
        scaleX={1}
        scaleY={1}
        skewX={0}
        skewY={0}
        stroke={null}
        strokeDasharray={null}
        strokeDashoffset={null}
        strokeLinecap={0}
        strokeLinejoin={0}
        strokeMiterlimit={4}
        strokeOpacity={1}
        strokeWidth={1}
        vectorEffect={0}
        x={0}
        y={0}
      />
    </RNSVGSvgView>
    <View
      accessible={true}
      clickable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        borderRadius={24}
        iconPadding={8}
        style={
          Object {
            "backgroundColor": Object {
              "color": Array [
                48,
                48,
                48,
              ],
              "model": "rgb",
              "valpha": 0.7,
            },
            "padding": 8,
          }
        }
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight={16}
          bbWidth={16}
          height={16}
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              undefined,
              Object {
                "opacity": 1,
              },
              Object {
                "flex": 0,
                "height": 16,
                "width": 16,
              },
            ]
          }
          vbHeight={24}
          vbWidth={24}
          width={16}
        >
          <RNSVGGroup
            fill={
              Array [
                0,
                4278190080,
              ]
            }
            fillOpacity={1}
            fillRule={1}
            font={Object {}}
            matrix={
              Array [
                1,
                0,
                0,
                1,
                0,
                0,
              ]
            }
            opacity={1}
            originX={0}
            originY={0}
            propList={Array []}
            rotation={0}
            scaleX={1}
            scaleY={1}
            skewX={0}
            skewY={0}
            stroke={null}
            strokeDasharray={null}
            strokeDashoffset={null}
            strokeLinecap={0}
            strokeLinejoin={0}
            strokeMiterlimit={4}
            strokeOpacity={1}
            strokeWidth={1}
            vectorEffect={0}
            x={0}
            y={0}
          >
            <RNSVGPath
              d="M13.07 12l7.2-7.2.5-.5c.3-.3.3-.78 0-1.08-.3-.3-.76-.3-1.06 0l-.5.5-7.2 7.2-7.2-7.2-.5-.5c-.3-.3-.77-.3-1.07 0-.3.3-.3.77 0 1.07l.5.5 7.2 7.2-7.7 7.7c-.3.3-.3.77 0 1.07.3.3.77.3 1.07 0l7.7-7.7 7.7 7.7c.3.3.78.3 1.08 0 .3-.3.3-.77 0-1.07l-7.7-7.7z"
              fill={
                Array [
                  0,
                  4294967295,
                ]
              }
              fillOpacity={1}
              fillRule={1}
              matrix={
                Array [
                  1,
                  0,
                  0,
                  1,
                  0,
                  0,
                ]
              }
              opacity={1}
              originX={0}
              originY={0}
              propList={
                Array [
                  "fill",
                ]
              }
              rotation={0}
              scaleX={1}
              scaleY={1}
              skewX={0}
              skewY={0}
              stroke={null}
              strokeDasharray={null}
              strokeDashoffset={null}
              strokeLinecap={0}
              strokeLinejoin={0}
              strokeMiterlimit={4}
              strokeOpacity={1}
              strokeWidth={1}
              vectorEffect={0}
              x={0}
              y={0}
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
  </View>
</BVLinearGradient>
`;

exports[`the UserPrayerList component renders no prayer text 1`] = `
<BVLinearGradient
  colors={
    Array [
      4294967295,
      4294506484,
    ]
  }
  endPoint={
    Object {
      "x": 0.5,
      "y": 1,
    }
  }
  locations={null}
  startPoint={
    Object {
      "x": 0.5,
      "y": 0,
    }
  }
  style={
    Object {
      "borderRadius": 0,
      "flex": null,
      "height": "100%",
      "width": "100%",
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    forceInset={
      Object {
        "top": "always",
      }
    }
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RCTScrollView>
      <View>
        <View
          style={
            Object {
              "paddingHorizontal": 16,
              "paddingVertical": 16,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#505050",
                "fontFamily": "Colfax-Bold",
                "fontSize": 12,
                "lineHeight": 17.28,
              }
            }
          >
            Viewing
          </Text>
          <Text
            style={
              Object {
                "color": "#6bac43",
                "fontFamily": "Colfax-Bold",
                "fontSize": 16,
                "lineHeight": 23.04,
              }
            }
          >
            My Prayers
          </Text>
        </View>
        <View
          style={
            Object {
              "marginBottom": 64,
            }
          }
        >
          <View
            style={
              Object {
                "paddingHorizontal": 16,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              bold={false}
              italic={false}
              style={
                Object {
                  "color": "#303030",
                  "fontFamily": "Colfax-Regular",
                  "fontSize": 16,
                  "lineHeight": 26,
                }
              }
            >
              You have not submitted any prayers. Go back and add one!
            </Text>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </RCTSafeAreaView>
  <View
    pointerEvents="box-none"
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingHorizontal": 16,
        "paddingVertical": 16,
        "position": "absolute",
        "top": 0,
        "width": "100%",
      }
    }
  >
    <RNSVGSvgView
      align="xMidYMid"
      bbHeight={32}
      bbWidth={32}
      fill="#303030"
      height={32}
      meetOrSlice={0}
      minX={0}
      minY={0}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          undefined,
          null,
          Object {
            "flex": 0,
            "height": 32,
            "width": 32,
          },
        ]
      }
      vbHeight={24}
      vbWidth={24}
      width={32}
    >
      <RNSVGGroup
        fill={
          Array [
            0,
            4281348144,
          ]
        }
        fillOpacity={1}
        fillRule={1}
        font={Object {}}
        matrix={
          Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ]
        }
        opacity={1}
        originX={0}
        originY={0}
        propList={
          Array [
            "fill",
          ]
        }
        rotation={0}
        scaleX={1}
        scaleY={1}
        skewX={0}
        skewY={0}
        stroke={null}
        strokeDasharray={null}
        strokeDashoffset={null}
        strokeLinecap={0}
        strokeLinejoin={0}
        strokeMiterlimit={4}
        strokeOpacity={1}
        strokeWidth={1}
        vectorEffect={0}
        x={0}
        y={0}
      />
    </RNSVGSvgView>
    <View
      accessible={true}
      clickable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        borderRadius={24}
        iconPadding={8}
        style={
          Object {
            "backgroundColor": Object {
              "color": Array [
                48,
                48,
                48,
              ],
              "model": "rgb",
              "valpha": 0.7,
            },
            "padding": 8,
          }
        }
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight={16}
          bbWidth={16}
          height={16}
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              undefined,
              Object {
                "opacity": 1,
              },
              Object {
                "flex": 0,
                "height": 16,
                "width": 16,
              },
            ]
          }
          vbHeight={24}
          vbWidth={24}
          width={16}
        >
          <RNSVGGroup
            fill={
              Array [
                0,
                4278190080,
              ]
            }
            fillOpacity={1}
            fillRule={1}
            font={Object {}}
            matrix={
              Array [
                1,
                0,
                0,
                1,
                0,
                0,
              ]
            }
            opacity={1}
            originX={0}
            originY={0}
            propList={Array []}
            rotation={0}
            scaleX={1}
            scaleY={1}
            skewX={0}
            skewY={0}
            stroke={null}
            strokeDasharray={null}
            strokeDashoffset={null}
            strokeLinecap={0}
            strokeLinejoin={0}
            strokeMiterlimit={4}
            strokeOpacity={1}
            strokeWidth={1}
            vectorEffect={0}
            x={0}
            y={0}
          >
            <RNSVGPath
              d="M13.07 12l7.2-7.2.5-.5c.3-.3.3-.78 0-1.08-.3-.3-.76-.3-1.06 0l-.5.5-7.2 7.2-7.2-7.2-.5-.5c-.3-.3-.77-.3-1.07 0-.3.3-.3.77 0 1.07l.5.5 7.2 7.2-7.7 7.7c-.3.3-.3.77 0 1.07.3.3.77.3 1.07 0l7.7-7.7 7.7 7.7c.3.3.78.3 1.08 0 .3-.3.3-.77 0-1.07l-7.7-7.7z"
              fill={
                Array [
                  0,
                  4294967295,
                ]
              }
              fillOpacity={1}
              fillRule={1}
              matrix={
                Array [
                  1,
                  0,
                  0,
                  1,
                  0,
                  0,
                ]
              }
              opacity={1}
              originX={0}
              originY={0}
              propList={
                Array [
                  "fill",
                ]
              }
              rotation={0}
              scaleX={1}
              scaleY={1}
              skewX={0}
              skewY={0}
              stroke={null}
              strokeDasharray={null}
              strokeDashoffset={null}
              strokeLinecap={0}
              strokeLinejoin={0}
              strokeMiterlimit={4}
              strokeOpacity={1}
              strokeWidth={1}
              vectorEffect={0}
              x={0}
              y={0}
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
  </View>
</BVLinearGradient>
`;
