// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The DiscoverFeed component should render 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    enabled={false}
    hitSlop={
      Object {
        "right": 50,
      }
    }
    maxDeltaY={20}
    minOffsetX={5}
    onGestureEvent={[Function]}
    onHandlerStateChange={[Function]}
  >
    <View
      style={
        Object {
          "backgroundColor": "#eee",
          "flex": 1,
          "flexDirection": "column-reverse",
          "overflow": "hidden",
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          pointerEvents="auto"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "paddingTop": 64,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "transform": Array [
                Object {
                  "translateX": 0,
                },
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
        >
          <View
            accessibilityElementsHidden={false}
            style={
              Object {
                "backgroundColor": "#fff",
                "flex": 1,
              }
            }
          >
            <RCTScrollView
              data={Array []}
              disableVirtualization={false}
              getItem={[Function]}
              getItemCount={[Function]}
              horizontal={false}
              initialNumToRender={10}
              keyExtractor={[Function]}
              loadingStateObject={
                Object {
                  "isLoading": true,
                  "name": "",
                }
              }
              maxToRenderPerBatch={10}
              numColumns={1}
              onContentSizeChange={[Function]}
              onEndReachedThreshold={0.7}
              onLayout={[Function]}
              onMomentumScrollEnd={[Function]}
              onRefresh={[Function]}
              onScroll={[Function]}
              onScrollBeginDrag={[Function]}
              onScrollEndDrag={[Function]}
              refreshControl={
                <RefreshControlMock
                  onRefresh={[Function]}
                  refreshing={false}
                />
              }
              refreshing={false}
              removeClippedSubviews={false}
              renderItem={[Function]}
              scrollEventThrottle={50}
              stickyHeaderIndices={Array []}
              updateCellsBatchingPeriod={50}
              viewabilityConfigCallbackPairs={Array []}
              windowSize={21}
            >
              <RCTRefreshControl />
              <View />
            </RCTScrollView>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        pointerEvents="box-none"
        style={
          Object {
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#fff",
              "transform": Array [
                Object {
                  "translateX": 0,
                },
              ],
            }
          }
        >
          <View
            onLayout={[Function]}
            pointerEvents="box-none"
            style={
              Object {
                "backgroundColor": "#fff",
                "borderBottomColor": "#a7a7aa",
                "borderBottomWidth": 0.5,
                "height": 64,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 20,
              }
            }
          >
            <View
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                style={
                  Object {
                    "bottom": 0,
                    "flexDirection": "row",
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "transparent",
                      "bottom": 0,
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "left": 0,
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    accessibilityTraits="header"
                    allowFontScaling={false}
                    numberOfLines={1}
                    onLayout={[Function]}
                    style={
                      Object {
                        "color": "rgba(0, 0, 0, 0.9)",
                        "fontSize": 17,
                        "fontWeight": "600",
                        "marginHorizontal": 16,
                        "textAlign": "center",
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`The DiscoverFeed component should render a loading state 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    enabled={false}
    hitSlop={
      Object {
        "right": 50,
      }
    }
    maxDeltaY={20}
    minOffsetX={5}
    onGestureEvent={[Function]}
    onHandlerStateChange={[Function]}
  >
    <View
      style={
        Object {
          "backgroundColor": "#eee",
          "flex": 1,
          "flexDirection": "column-reverse",
          "overflow": "hidden",
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          pointerEvents="auto"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "paddingTop": 64,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "transform": Array [
                Object {
                  "translateX": 0,
                },
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
        >
          <View
            accessibilityElementsHidden={false}
            style={
              Object {
                "backgroundColor": "#fff",
                "flex": 1,
              }
            }
          >
            <RCTScrollView
              data={
                Array [
                  Object {
                    "id": "fakeId0",
                    "isLoading": true,
                    "name": "",
                  },
                  Object {
                    "id": "fakeId1",
                    "isLoading": true,
                    "name": "",
                  },
                  Object {
                    "id": "fakeId2",
                    "isLoading": true,
                    "name": "",
                  },
                  Object {
                    "id": "fakeId3",
                    "isLoading": true,
                    "name": "",
                  },
                  Object {
                    "id": "fakeId4",
                    "isLoading": true,
                    "name": "",
                  },
                  Object {
                    "id": "fakeId5",
                    "isLoading": true,
                    "name": "",
                  },
                  Object {
                    "id": "fakeId6",
                    "isLoading": true,
                    "name": "",
                  },
                  Object {
                    "id": "fakeId7",
                    "isLoading": true,
                    "name": "",
                  },
                  Object {
                    "id": "fakeId8",
                    "isLoading": true,
                    "name": "",
                  },
                  Object {
                    "id": "fakeId9",
                    "isLoading": true,
                    "name": "",
                  },
                ]
              }
              disableVirtualization={false}
              getItem={[Function]}
              getItemCount={[Function]}
              horizontal={false}
              initialNumToRender={10}
              keyExtractor={[Function]}
              loadingStateObject={
                Object {
                  "isLoading": true,
                  "name": "",
                }
              }
              maxToRenderPerBatch={10}
              numColumns={1}
              onContentSizeChange={[Function]}
              onEndReached={[Function]}
              onEndReachedThreshold={0.7}
              onLayout={[Function]}
              onMomentumScrollEnd={[Function]}
              onRefresh={[Function]}
              onScroll={[Function]}
              onScrollBeginDrag={[Function]}
              onScrollEndDrag={[Function]}
              refreshControl={
                <RefreshControlMock
                  onRefresh={[Function]}
                  refreshing={true}
                />
              }
              refreshing={true}
              removeClippedSubviews={false}
              renderItem={[Function]}
              scrollEventThrottle={50}
              stickyHeaderIndices={Array []}
              updateCellsBatchingPeriod={50}
              viewabilityConfigCallbackPairs={Array []}
              windowSize={21}
            >
              <RCTRefreshControl />
              <View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "paddingLeft": 16,
                        "zIndex": 2,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flexGrow": 2,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignSelf": "stretch",
                            "backgroundColor": "#dddddd",
                            "borderRadius": 16,
                            "height": 14,
                            "marginVertical": 3.08,
                            "width": "60%",
                          }
                        }
                      />
                    </View>
                    <View
                      accessible={true}
                      clickable={true}
                      isTVSelectable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flexDirection": "row",
                            "justifyContent": "flex-end",
                            "padding": 16,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignSelf": "stretch",
                              "backgroundColor": "#dddddd",
                              "borderRadius": 16,
                              "height": 12,
                              "marginVertical": 2.6400000000000006,
                              "width": "50%",
                            }
                          }
                        />
                      </View>
                    </View>
                  </View>
                  <View
                    contentContainerStyle={
                      Object {
                        "padding": 8,
                        "paddingBottom": 0,
                      }
                    }
                    data={
                      Array [
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId0",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId1",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId2",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId3",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId4",
                          "title": "",
                        },
                      ]
                    }
                    decelerationRate="fast"
                    fetchMore={[Function]}
                    horizontal={true}
                    initialScrollIndex={0}
                    keyExtractor={[Function]}
                    loadingStateObject={
                      Object {
                        "coverImage": Array [],
                        "id": "fake_id",
                        "title": "",
                      }
                    }
                    refreshing={true}
                    renderItem={[Function]}
                    showsHorizontalScrollIndicator={false}
                    snapToAlignment="start"
                    snapToInterval={256}
                    style={
                      Object {
                        "marginTop": -20,
                        "paddingBottom": 16,
                        "zIndex": 1,
                      }
                    }
                  />
                </View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "paddingLeft": 16,
                        "zIndex": 2,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flexGrow": 2,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignSelf": "stretch",
                            "backgroundColor": "#dddddd",
                            "borderRadius": 16,
                            "height": 14,
                            "marginVertical": 3.08,
                            "width": "60%",
                          }
                        }
                      />
                    </View>
                    <View
                      accessible={true}
                      clickable={true}
                      isTVSelectable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flexDirection": "row",
                            "justifyContent": "flex-end",
                            "padding": 16,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignSelf": "stretch",
                              "backgroundColor": "#dddddd",
                              "borderRadius": 16,
                              "height": 12,
                              "marginVertical": 2.6400000000000006,
                              "width": "50%",
                            }
                          }
                        />
                      </View>
                    </View>
                  </View>
                  <View
                    contentContainerStyle={
                      Object {
                        "padding": 8,
                        "paddingBottom": 0,
                      }
                    }
                    data={
                      Array [
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId0",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId1",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId2",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId3",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId4",
                          "title": "",
                        },
                      ]
                    }
                    decelerationRate="fast"
                    fetchMore={[Function]}
                    horizontal={true}
                    initialScrollIndex={0}
                    keyExtractor={[Function]}
                    loadingStateObject={
                      Object {
                        "coverImage": Array [],
                        "id": "fake_id",
                        "title": "",
                      }
                    }
                    refreshing={true}
                    renderItem={[Function]}
                    showsHorizontalScrollIndicator={false}
                    snapToAlignment="start"
                    snapToInterval={256}
                    style={
                      Object {
                        "marginTop": -20,
                        "paddingBottom": 16,
                        "zIndex": 1,
                      }
                    }
                  />
                </View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "paddingLeft": 16,
                        "zIndex": 2,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flexGrow": 2,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignSelf": "stretch",
                            "backgroundColor": "#dddddd",
                            "borderRadius": 16,
                            "height": 14,
                            "marginVertical": 3.08,
                            "width": "60%",
                          }
                        }
                      />
                    </View>
                    <View
                      accessible={true}
                      clickable={true}
                      isTVSelectable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flexDirection": "row",
                            "justifyContent": "flex-end",
                            "padding": 16,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignSelf": "stretch",
                              "backgroundColor": "#dddddd",
                              "borderRadius": 16,
                              "height": 12,
                              "marginVertical": 2.6400000000000006,
                              "width": "50%",
                            }
                          }
                        />
                      </View>
                    </View>
                  </View>
                  <View
                    contentContainerStyle={
                      Object {
                        "padding": 8,
                        "paddingBottom": 0,
                      }
                    }
                    data={
                      Array [
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId0",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId1",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId2",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId3",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId4",
                          "title": "",
                        },
                      ]
                    }
                    decelerationRate="fast"
                    fetchMore={[Function]}
                    horizontal={true}
                    initialScrollIndex={0}
                    keyExtractor={[Function]}
                    loadingStateObject={
                      Object {
                        "coverImage": Array [],
                        "id": "fake_id",
                        "title": "",
                      }
                    }
                    refreshing={true}
                    renderItem={[Function]}
                    showsHorizontalScrollIndicator={false}
                    snapToAlignment="start"
                    snapToInterval={256}
                    style={
                      Object {
                        "marginTop": -20,
                        "paddingBottom": 16,
                        "zIndex": 1,
                      }
                    }
                  />
                </View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "paddingLeft": 16,
                        "zIndex": 2,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flexGrow": 2,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignSelf": "stretch",
                            "backgroundColor": "#dddddd",
                            "borderRadius": 16,
                            "height": 14,
                            "marginVertical": 3.08,
                            "width": "60%",
                          }
                        }
                      />
                    </View>
                    <View
                      accessible={true}
                      clickable={true}
                      isTVSelectable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flexDirection": "row",
                            "justifyContent": "flex-end",
                            "padding": 16,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignSelf": "stretch",
                              "backgroundColor": "#dddddd",
                              "borderRadius": 16,
                              "height": 12,
                              "marginVertical": 2.6400000000000006,
                              "width": "50%",
                            }
                          }
                        />
                      </View>
                    </View>
                  </View>
                  <View
                    contentContainerStyle={
                      Object {
                        "padding": 8,
                        "paddingBottom": 0,
                      }
                    }
                    data={
                      Array [
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId0",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId1",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId2",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId3",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId4",
                          "title": "",
                        },
                      ]
                    }
                    decelerationRate="fast"
                    fetchMore={[Function]}
                    horizontal={true}
                    initialScrollIndex={0}
                    keyExtractor={[Function]}
                    loadingStateObject={
                      Object {
                        "coverImage": Array [],
                        "id": "fake_id",
                        "title": "",
                      }
                    }
                    refreshing={true}
                    renderItem={[Function]}
                    showsHorizontalScrollIndicator={false}
                    snapToAlignment="start"
                    snapToInterval={256}
                    style={
                      Object {
                        "marginTop": -20,
                        "paddingBottom": 16,
                        "zIndex": 1,
                      }
                    }
                  />
                </View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "paddingLeft": 16,
                        "zIndex": 2,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flexGrow": 2,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignSelf": "stretch",
                            "backgroundColor": "#dddddd",
                            "borderRadius": 16,
                            "height": 14,
                            "marginVertical": 3.08,
                            "width": "60%",
                          }
                        }
                      />
                    </View>
                    <View
                      accessible={true}
                      clickable={true}
                      isTVSelectable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flexDirection": "row",
                            "justifyContent": "flex-end",
                            "padding": 16,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignSelf": "stretch",
                              "backgroundColor": "#dddddd",
                              "borderRadius": 16,
                              "height": 12,
                              "marginVertical": 2.6400000000000006,
                              "width": "50%",
                            }
                          }
                        />
                      </View>
                    </View>
                  </View>
                  <View
                    contentContainerStyle={
                      Object {
                        "padding": 8,
                        "paddingBottom": 0,
                      }
                    }
                    data={
                      Array [
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId0",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId1",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId2",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId3",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId4",
                          "title": "",
                        },
                      ]
                    }
                    decelerationRate="fast"
                    fetchMore={[Function]}
                    horizontal={true}
                    initialScrollIndex={0}
                    keyExtractor={[Function]}
                    loadingStateObject={
                      Object {
                        "coverImage": Array [],
                        "id": "fake_id",
                        "title": "",
                      }
                    }
                    refreshing={true}
                    renderItem={[Function]}
                    showsHorizontalScrollIndicator={false}
                    snapToAlignment="start"
                    snapToInterval={256}
                    style={
                      Object {
                        "marginTop": -20,
                        "paddingBottom": 16,
                        "zIndex": 1,
                      }
                    }
                  />
                </View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "paddingLeft": 16,
                        "zIndex": 2,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flexGrow": 2,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignSelf": "stretch",
                            "backgroundColor": "#dddddd",
                            "borderRadius": 16,
                            "height": 14,
                            "marginVertical": 3.08,
                            "width": "60%",
                          }
                        }
                      />
                    </View>
                    <View
                      accessible={true}
                      clickable={true}
                      isTVSelectable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flexDirection": "row",
                            "justifyContent": "flex-end",
                            "padding": 16,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignSelf": "stretch",
                              "backgroundColor": "#dddddd",
                              "borderRadius": 16,
                              "height": 12,
                              "marginVertical": 2.6400000000000006,
                              "width": "50%",
                            }
                          }
                        />
                      </View>
                    </View>
                  </View>
                  <View
                    contentContainerStyle={
                      Object {
                        "padding": 8,
                        "paddingBottom": 0,
                      }
                    }
                    data={
                      Array [
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId0",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId1",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId2",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId3",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId4",
                          "title": "",
                        },
                      ]
                    }
                    decelerationRate="fast"
                    fetchMore={[Function]}
                    horizontal={true}
                    initialScrollIndex={0}
                    keyExtractor={[Function]}
                    loadingStateObject={
                      Object {
                        "coverImage": Array [],
                        "id": "fake_id",
                        "title": "",
                      }
                    }
                    refreshing={true}
                    renderItem={[Function]}
                    showsHorizontalScrollIndicator={false}
                    snapToAlignment="start"
                    snapToInterval={256}
                    style={
                      Object {
                        "marginTop": -20,
                        "paddingBottom": 16,
                        "zIndex": 1,
                      }
                    }
                  />
                </View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "paddingLeft": 16,
                        "zIndex": 2,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flexGrow": 2,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignSelf": "stretch",
                            "backgroundColor": "#dddddd",
                            "borderRadius": 16,
                            "height": 14,
                            "marginVertical": 3.08,
                            "width": "60%",
                          }
                        }
                      />
                    </View>
                    <View
                      accessible={true}
                      clickable={true}
                      isTVSelectable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flexDirection": "row",
                            "justifyContent": "flex-end",
                            "padding": 16,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignSelf": "stretch",
                              "backgroundColor": "#dddddd",
                              "borderRadius": 16,
                              "height": 12,
                              "marginVertical": 2.6400000000000006,
                              "width": "50%",
                            }
                          }
                        />
                      </View>
                    </View>
                  </View>
                  <View
                    contentContainerStyle={
                      Object {
                        "padding": 8,
                        "paddingBottom": 0,
                      }
                    }
                    data={
                      Array [
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId0",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId1",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId2",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId3",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId4",
                          "title": "",
                        },
                      ]
                    }
                    decelerationRate="fast"
                    fetchMore={[Function]}
                    horizontal={true}
                    initialScrollIndex={0}
                    keyExtractor={[Function]}
                    loadingStateObject={
                      Object {
                        "coverImage": Array [],
                        "id": "fake_id",
                        "title": "",
                      }
                    }
                    refreshing={true}
                    renderItem={[Function]}
                    showsHorizontalScrollIndicator={false}
                    snapToAlignment="start"
                    snapToInterval={256}
                    style={
                      Object {
                        "marginTop": -20,
                        "paddingBottom": 16,
                        "zIndex": 1,
                      }
                    }
                  />
                </View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "paddingLeft": 16,
                        "zIndex": 2,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flexGrow": 2,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignSelf": "stretch",
                            "backgroundColor": "#dddddd",
                            "borderRadius": 16,
                            "height": 14,
                            "marginVertical": 3.08,
                            "width": "60%",
                          }
                        }
                      />
                    </View>
                    <View
                      accessible={true}
                      clickable={true}
                      isTVSelectable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flexDirection": "row",
                            "justifyContent": "flex-end",
                            "padding": 16,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignSelf": "stretch",
                              "backgroundColor": "#dddddd",
                              "borderRadius": 16,
                              "height": 12,
                              "marginVertical": 2.6400000000000006,
                              "width": "50%",
                            }
                          }
                        />
                      </View>
                    </View>
                  </View>
                  <View
                    contentContainerStyle={
                      Object {
                        "padding": 8,
                        "paddingBottom": 0,
                      }
                    }
                    data={
                      Array [
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId0",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId1",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId2",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId3",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId4",
                          "title": "",
                        },
                      ]
                    }
                    decelerationRate="fast"
                    fetchMore={[Function]}
                    horizontal={true}
                    initialScrollIndex={0}
                    keyExtractor={[Function]}
                    loadingStateObject={
                      Object {
                        "coverImage": Array [],
                        "id": "fake_id",
                        "title": "",
                      }
                    }
                    refreshing={true}
                    renderItem={[Function]}
                    showsHorizontalScrollIndicator={false}
                    snapToAlignment="start"
                    snapToInterval={256}
                    style={
                      Object {
                        "marginTop": -20,
                        "paddingBottom": 16,
                        "zIndex": 1,
                      }
                    }
                  />
                </View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "paddingLeft": 16,
                        "zIndex": 2,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flexGrow": 2,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignSelf": "stretch",
                            "backgroundColor": "#dddddd",
                            "borderRadius": 16,
                            "height": 14,
                            "marginVertical": 3.08,
                            "width": "60%",
                          }
                        }
                      />
                    </View>
                    <View
                      accessible={true}
                      clickable={true}
                      isTVSelectable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flexDirection": "row",
                            "justifyContent": "flex-end",
                            "padding": 16,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignSelf": "stretch",
                              "backgroundColor": "#dddddd",
                              "borderRadius": 16,
                              "height": 12,
                              "marginVertical": 2.6400000000000006,
                              "width": "50%",
                            }
                          }
                        />
                      </View>
                    </View>
                  </View>
                  <View
                    contentContainerStyle={
                      Object {
                        "padding": 8,
                        "paddingBottom": 0,
                      }
                    }
                    data={
                      Array [
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId0",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId1",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId2",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId3",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId4",
                          "title": "",
                        },
                      ]
                    }
                    decelerationRate="fast"
                    fetchMore={[Function]}
                    horizontal={true}
                    initialScrollIndex={0}
                    keyExtractor={[Function]}
                    loadingStateObject={
                      Object {
                        "coverImage": Array [],
                        "id": "fake_id",
                        "title": "",
                      }
                    }
                    refreshing={true}
                    renderItem={[Function]}
                    showsHorizontalScrollIndicator={false}
                    snapToAlignment="start"
                    snapToInterval={256}
                    style={
                      Object {
                        "marginTop": -20,
                        "paddingBottom": 16,
                        "zIndex": 1,
                      }
                    }
                  />
                </View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "paddingLeft": 16,
                        "zIndex": 2,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flexGrow": 2,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignSelf": "stretch",
                            "backgroundColor": "#dddddd",
                            "borderRadius": 16,
                            "height": 14,
                            "marginVertical": 3.08,
                            "width": "60%",
                          }
                        }
                      />
                    </View>
                    <View
                      accessible={true}
                      clickable={true}
                      isTVSelectable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flexDirection": "row",
                            "justifyContent": "flex-end",
                            "padding": 16,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignSelf": "stretch",
                              "backgroundColor": "#dddddd",
                              "borderRadius": 16,
                              "height": 12,
                              "marginVertical": 2.6400000000000006,
                              "width": "50%",
                            }
                          }
                        />
                      </View>
                    </View>
                  </View>
                  <View
                    contentContainerStyle={
                      Object {
                        "padding": 8,
                        "paddingBottom": 0,
                      }
                    }
                    data={
                      Array [
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId0",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId1",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId2",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId3",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId4",
                          "title": "",
                        },
                      ]
                    }
                    decelerationRate="fast"
                    fetchMore={[Function]}
                    horizontal={true}
                    initialScrollIndex={0}
                    keyExtractor={[Function]}
                    loadingStateObject={
                      Object {
                        "coverImage": Array [],
                        "id": "fake_id",
                        "title": "",
                      }
                    }
                    refreshing={true}
                    renderItem={[Function]}
                    showsHorizontalScrollIndicator={false}
                    snapToAlignment="start"
                    snapToInterval={256}
                    style={
                      Object {
                        "marginTop": -20,
                        "paddingBottom": 16,
                        "zIndex": 1,
                      }
                    }
                  />
                </View>
              </View>
            </RCTScrollView>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        pointerEvents="box-none"
        style={
          Object {
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#fff",
              "transform": Array [
                Object {
                  "translateX": 0,
                },
              ],
            }
          }
        >
          <View
            onLayout={[Function]}
            pointerEvents="box-none"
            style={
              Object {
                "backgroundColor": "#fff",
                "borderBottomColor": "#a7a7aa",
                "borderBottomWidth": 0.5,
                "height": 64,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 20,
              }
            }
          >
            <View
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                style={
                  Object {
                    "bottom": 0,
                    "flexDirection": "row",
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "transparent",
                      "bottom": 0,
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "left": 0,
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    accessibilityTraits="header"
                    allowFontScaling={false}
                    numberOfLines={1}
                    onLayout={[Function]}
                    style={
                      Object {
                        "color": "rgba(0, 0, 0, 0.9)",
                        "fontSize": 17,
                        "fontWeight": "600",
                        "marginHorizontal": 16,
                        "textAlign": "center",
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
