// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The DiscoverFeed component should render 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    enabled={false}
    hitSlop={
      Object {
        "right": 50,
      }
    }
    maxDeltaY={20}
    minOffsetX={5}
    onGestureEvent={[Function]}
    onHandlerStateChange={[Function]}
  >
    <View
      style={
        Object {
          "backgroundColor": "#eee",
          "flex": 1,
          "flexDirection": "column-reverse",
          "overflow": "hidden",
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          pointerEvents="auto"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "paddingTop": 64,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "transform": Array [
                Object {
                  "translateX": 0,
                },
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
        >
          <View
            accessibilityElementsHidden={false}
            style={
              Object {
                "backgroundColor": "#fff",
                "flex": 1,
              }
            }
          >
            <RCTScrollView
              data={
                Array [
                  Object {
                    "__typename": "ContentChannel",
                    "childContentItemsConnection": Object {
                      "__typename": "ContentItemsConnection",
                      "edges": Array [
                        Object {
                          "__typename": "ContentItemsConnectionEdge",
                          "node": Object {
                            "__typename": "UniversalContentItem",
                            "coverImage": Object {
                              "__typename": "ImageMedia",
                              "sources": Array [
                                Object {
                                  "__typename": "ImageMediaSource",
                                  "uri": "https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D62e0e2ba-2dac-468b-a852-7e8cf2533efc",
                                },
                              ],
                            },
                            "id": "UniversalContentItem:00bb7b364911281c97fc50f2a0d17b11",
                            "parentChannel": Object {
                              "__typename": "ContentChannel",
                              "id": "ContentChannel:965b6e6d7046a885bea4e300b5c0400d",
                              "name": "News",
                            },
                            "summary": "Come join us!",
                            "theme": null,
                            "title": "Anderson Family Cookout!",
                            "videos": Array [],
                          },
                        },
                        Object {
                          "__typename": "ContentItemsConnectionEdge",
                          "node": Object {
                            "__typename": "UniversalContentItem",
                            "coverImage": Object {
                              "__typename": "ImageMedia",
                              "sources": Array [
                                Object {
                                  "__typename": "ImageMediaSource",
                                  "uri": "https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Df3ba0936-8aab-46c1-8245-0e5aef637ae3",
                                },
                              ],
                            },
                            "id": "UniversalContentItem:7db601b238aa4345a818654300f83dd2",
                            "parentChannel": Object {
                              "__typename": "ContentChannel",
                              "id": "ContentChannel:965b6e6d7046a885bea4e300b5c0400d",
                              "name": "News",
                            },
                            "summary": "Don't miss a powerful message from preacher and speaker, Robert Madu.",
                            "theme": null,
                            "title": "Robert Madu is Coming to Christ Fellowship",
                            "videos": Array [],
                          },
                        },
                        Object {
                          "__typename": "ContentItemsConnectionEdge",
                          "node": Object {
                            "__typename": "UniversalContentItem",
                            "coverImage": Object {
                              "__typename": "ImageMedia",
                              "sources": Array [
                                Object {
                                  "__typename": "ImageMediaSource",
                                  "uri": "https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D58c037fa-cc7f-4d72-9571-a0cc0558e346",
                                },
                              ],
                            },
                            "id": "UniversalContentItem:296373ecb53580855cadffa0375ebe18",
                            "parentChannel": Object {
                              "__typename": "ContentChannel",
                              "id": "ContentChannel:965b6e6d7046a885bea4e300b5c0400d",
                              "name": "News",
                            },
                            "summary": "A time to connect with other guys who live nearby.",
                            "theme": null,
                            "title": "Guys Night!",
                            "videos": Array [],
                          },
                        },
                      ],
                    },
                    "id": "ContentChannel:965b6e6d7046a885bea4e300b5c0400d",
                    "name": "News",
                  },
                  Object {
                    "__typename": "ContentChannel",
                    "childContentItemsConnection": Object {
                      "__typename": "ContentItemsConnection",
                      "edges": Array [
                        Object {
                          "__typename": "ContentItemsConnectionEdge",
                          "node": Object {
                            "__typename": "UniversalContentItem",
                            "coverImage": null,
                            "id": "UniversalContentItem:604a4a763a5fc0edfe386684ca6b3515",
                            "parentChannel": Object {
                              "__typename": "ContentChannel",
                              "id": "ContentChannel:4f68015ba18662a7409d1219a4ce013e",
                              "name": "Articles",
                            },
                            "summary": "Test article...",
                            "theme": null,
                            "title": "Test Article",
                            "videos": Array [],
                          },
                        },
                        Object {
                          "__typename": "ContentItemsConnectionEdge",
                          "node": Object {
                            "__typename": "UniversalContentItem",
                            "coverImage": null,
                            "id": "UniversalContentItem:c495ff18cd998ed516a798b6218907cd",
                            "parentChannel": Object {
                              "__typename": "ContentChannel",
                              "id": "ContentChannel:4f68015ba18662a7409d1219a4ce013e",
                              "name": "Articles",
                            },
                            "summary": "1. Be slow What would it look like to live your life at half-speed?",
                            "theme": null,
                            "title": "10 ways to refresh your spirit every day",
                            "videos": Array [],
                          },
                        },
                        Object {
                          "__typename": "ContentItemsConnectionEdge",
                          "node": Object {
                            "__typename": "UniversalContentItem",
                            "coverImage": null,
                            "id": "UniversalContentItem:95ff79f60a028b1b506aaeedf8b4c6ae",
                            "parentChannel": Object {
                              "__typename": "ContentChannel",
                              "id": "ContentChannel:4f68015ba18662a7409d1219a4ce013e",
                              "name": "Articles",
                            },
                            "summary": "Get in the Groove
Celebrate your freedom in Christ — in the car, shower, cubicle or wherever you go — with this playlist of NewSpring Worship's favorite songs of the summer.",
                            "theme": null,
                            "title": "Live for Freedom Toolkit",
                            "videos": Array [],
                          },
                        },
                      ],
                    },
                    "id": "ContentChannel:4f68015ba18662a7409d1219a4ce013e",
                    "name": "Articles",
                  },
                  Object {
                    "__typename": "ContentChannel",
                    "childContentItemsConnection": Object {
                      "__typename": "ContentItemsConnection",
                      "edges": Array [
                        Object {
                          "__typename": "ContentItemsConnectionEdge",
                          "node": Object {
                            "__typename": "ContentSeriesContentItem",
                            "coverImage": Object {
                              "__typename": "ImageMedia",
                              "sources": Array [
                                Object {
                                  "__typename": "ImageMediaSource",
                                  "uri": "https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D98be229f-dfed-4344-86ab-0d11666fc781",
                                },
                              ],
                            },
                            "id": "ContentSeriesContentItem:6d8dc8e4bad017f815ae0cac8bf692bb",
                            "parentChannel": Object {
                              "__typename": "ContentChannel",
                              "id": "ContentChannel:a0f64573eabf00a607bec911794d50fb",
                              "name": "Sermon Series",
                            },
                            "summary": "Have you come into relationship with Jesus Christ?",
                            "theme": null,
                            "title": "The New Weekend Experience",
                            "videos": Array [
                              Object {
                                "__typename": "VideoMedia",
                                "sources": Array [],
                              },
                              Object {
                                "__typename": "VideoMedia",
                                "sources": Array [],
                              },
                            ],
                          },
                        },
                        Object {
                          "__typename": "ContentItemsConnectionEdge",
                          "node": Object {
                            "__typename": "ContentSeriesContentItem",
                            "coverImage": Object {
                              "__typename": "ImageMedia",
                              "sources": Array [
                                Object {
                                  "__typename": "ImageMediaSource",
                                  "uri": "https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D50f4e3e3-2842-4991-9f64-8fc6fbb3067c",
                                },
                              ],
                            },
                            "id": "ContentSeriesContentItem:08449058d438ebeaffe9adb7a8e633cc",
                            "parentChannel": Object {
                              "__typename": "ContentChannel",
                              "id": "ContentChannel:a0f64573eabf00a607bec911794d50fb",
                              "name": "Sermon Series",
                            },
                            "summary": "",
                            "theme": null,
                            "title": "Gathering",
                            "videos": Array [
                              Object {
                                "__typename": "VideoMedia",
                                "sources": Array [],
                              },
                              Object {
                                "__typename": "VideoMedia",
                                "sources": Array [],
                              },
                            ],
                          },
                        },
                        Object {
                          "__typename": "ContentItemsConnectionEdge",
                          "node": Object {
                            "__typename": "ContentSeriesContentItem",
                            "coverImage": Object {
                              "__typename": "ImageMedia",
                              "sources": Array [
                                Object {
                                  "__typename": "ImageMediaSource",
                                  "uri": "https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D3e3e38d2-d804-45db-b45a-3b7a82c415d1",
                                },
                              ],
                            },
                            "id": "ContentSeriesContentItem:b74c2d295a0cf1340232ffa8be856c00",
                            "parentChannel": Object {
                              "__typename": "ContentChannel",
                              "id": "ContentChannel:a0f64573eabf00a607bec911794d50fb",
                              "name": "Sermon Series",
                            },
                            "summary": "",
                            "theme": null,
                            "title": "Gauntlet 2018",
                            "videos": Array [
                              Object {
                                "__typename": "VideoMedia",
                                "sources": Array [],
                              },
                              Object {
                                "__typename": "VideoMedia",
                                "sources": Array [],
                              },
                            ],
                          },
                        },
                      ],
                    },
                    "id": "ContentChannel:a0f64573eabf00a607bec911794d50fb",
                    "name": "Sermon Series",
                  },
                  Object {
                    "__typename": "ContentChannel",
                    "childContentItemsConnection": Object {
                      "__typename": "ContentItemsConnection",
                      "edges": Array [
                        Object {
                          "__typename": "ContentItemsConnectionEdge",
                          "node": Object {
                            "__typename": "ContentSeriesContentItem",
                            "coverImage": Object {
                              "__typename": "ImageMedia",
                              "sources": Array [
                                Object {
                                  "__typename": "ImageMediaSource",
                                  "uri": "https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D31af1a61-360c-4b1e-8e62-45517c06a9a2",
                                },
                              ],
                            },
                            "id": "ContentSeriesContentItem:b085ec27d53006e9e6b95f3ac57da581",
                            "parentChannel": Object {
                              "__typename": "ContentChannel",
                              "id": "ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e",
                              "name": "Devotion Series",
                            },
                            "summary": "Have you ever had to deliver difficult news?",
                            "theme": null,
                            "title": "Jeremiah: A 33-Day Devotional",
                            "videos": Array [
                              Object {
                                "__typename": "VideoMedia",
                                "sources": Array [],
                              },
                            ],
                          },
                        },
                        Object {
                          "__typename": "ContentItemsConnectionEdge",
                          "node": Object {
                            "__typename": "ContentSeriesContentItem",
                            "coverImage": Object {
                              "__typename": "ImageMedia",
                              "sources": Array [
                                Object {
                                  "__typename": "ImageMediaSource",
                                  "uri": "https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f",
                                },
                              ],
                            },
                            "id": "ContentSeriesContentItem:71bfdac0b98ea1b72a63ff4ea64e3c5a",
                            "parentChannel": Object {
                              "__typename": "ContentChannel",
                              "id": "ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e",
                              "name": "Devotion Series",
                            },
                            "summary": "",
                            "theme": null,
                            "title": "How To Be A Better Leader: A 7-Day Devotional",
                            "videos": Array [
                              Object {
                                "__typename": "VideoMedia",
                                "sources": Array [],
                              },
                            ],
                          },
                        },
                        Object {
                          "__typename": "ContentItemsConnectionEdge",
                          "node": Object {
                            "__typename": "ContentSeriesContentItem",
                            "coverImage": Object {
                              "__typename": "ImageMedia",
                              "sources": Array [
                                Object {
                                  "__typename": "ImageMediaSource",
                                  "uri": "https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D70b0b57c-5a15-4f46-8e6a-c759231685bf",
                                },
                              ],
                            },
                            "id": "ContentSeriesContentItem:44fd3b82373ea8f197bd1e1e77c4bed0",
                            "parentChannel": Object {
                              "__typename": "ContentChannel",
                              "id": "ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e",
                              "name": "Devotion Series",
                            },
                            "summary": "",
                            "theme": null,
                            "title": "2 Thessalonians: A 5-Day Devotional",
                            "videos": Array [
                              Object {
                                "__typename": "VideoMedia",
                                "sources": Array [],
                              },
                            ],
                          },
                        },
                      ],
                    },
                    "id": "ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e",
                    "name": "Devotion Series",
                  },
                  Object {
                    "__typename": "ContentChannel",
                    "childContentItemsConnection": Object {
                      "__typename": "ContentItemsConnection",
                      "edges": Array [
                        Object {
                          "__typename": "ContentItemsConnectionEdge",
                          "node": Object {
                            "__typename": "UniversalContentItem",
                            "coverImage": Object {
                              "__typename": "ImageMedia",
                              "sources": Array [
                                Object {
                                  "__typename": "ImageMediaSource",
                                  "uri": "https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D2a65e561-cd6e-4590-bb37-029a21c554e8",
                                },
                              ],
                            },
                            "id": "UniversalContentItem:cf8fa657f23af88a2d63f7e4a2237db8",
                            "parentChannel": Object {
                              "__typename": "ContentChannel",
                              "id": "ContentChannel:be7381e9c2fea9f41504cd98d4b14321",
                              "name": "Stories",
                            },
                            "summary": "My father, Darwin, has always been involved in my life.",
                            "theme": null,
                            "title": "The surprising journey that changed me and my dad",
                            "videos": Array [],
                          },
                        },
                        Object {
                          "__typename": "ContentItemsConnectionEdge",
                          "node": Object {
                            "__typename": "UniversalContentItem",
                            "coverImage": Object {
                              "__typename": "ImageMedia",
                              "sources": Array [
                                Object {
                                  "__typename": "ImageMediaSource",
                                  "uri": "https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D0305285f-1155-4405-ba38-a61b9c8558be",
                                },
                              ],
                            },
                            "id": "UniversalContentItem:2e17f5a66407d114ab9f2392b03ebccd",
                            "parentChannel": Object {
                              "__typename": "ContentChannel",
                              "id": "ContentChannel:be7381e9c2fea9f41504cd98d4b14321",
                              "name": "Stories",
                            },
                            "summary": "Brian Kalwat was just trying to knock something off his honey-do list.",
                            "theme": null,
                            "title": "When I lost hope, my church family had my back",
                            "videos": Array [],
                          },
                        },
                        Object {
                          "__typename": "ContentItemsConnectionEdge",
                          "node": Object {
                            "__typename": "UniversalContentItem",
                            "coverImage": Object {
                              "__typename": "ImageMedia",
                              "sources": Array [
                                Object {
                                  "__typename": "ImageMediaSource",
                                  "uri": "https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Da65bc45d-f961-4b7e-a899-63eb1f9b8da9",
                                },
                              ],
                            },
                            "id": "UniversalContentItem:ae8ec75906ba7437c49ad2534b5024db",
                            "parentChannel": Object {
                              "__typename": "ContentChannel",
                              "id": "ContentChannel:be7381e9c2fea9f41504cd98d4b14321",
                              "name": "Stories",
                            },
                            "summary": "Cornelius &amp; Stephanie Mack, proud parents of a Special Friends adult, share about their experience
Our son Cameron began attending Willow Creek Special Friends in 2015.",
                            "theme": null,
                            "title": "A Place to Worship Free of Fear",
                            "videos": Array [],
                          },
                        },
                      ],
                    },
                    "id": "ContentChannel:be7381e9c2fea9f41504cd98d4b14321",
                    "name": "Stories",
                  },
                ]
              }
              disableVirtualization={false}
              getItem={[Function]}
              getItemCount={[Function]}
              horizontal={false}
              initialNumToRender={10}
              keyExtractor={[Function]}
              loadingStateObject={
                Object {
                  "isLoading": true,
                  "name": "",
                }
              }
              maxToRenderPerBatch={10}
              numColumns={1}
              onContentSizeChange={[Function]}
              onEndReachedThreshold={0.7}
              onLayout={[Function]}
              onMomentumScrollEnd={[Function]}
              onRefresh={[Function]}
              onScroll={[Function]}
              onScrollBeginDrag={[Function]}
              onScrollEndDrag={[Function]}
              refreshControl={
                <RefreshControlMock
                  onRefresh={[Function]}
                  refreshing={false}
                />
              }
              refreshing={false}
              removeClippedSubviews={false}
              renderItem={[Function]}
              scrollEventThrottle={50}
              stickyHeaderIndices={Array []}
              updateCellsBatchingPeriod={50}
              viewabilityConfigCallbackPairs={Array []}
              windowSize={21}
            >
              <RCTRefreshControl />
              <View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "paddingLeft": 16,
                        "zIndex": 2,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flexGrow": 2,
                        }
                      }
                    >
                      <Text
                        style={
                          Object {
                            "color": "#303030",
                            "fontFamily": "Colfax-Medium",
                            "fontSize": 14,
                            "lineHeight": 20.16,
                          }
                        }
                      >
                        News
                      </Text>
                    </View>
                    <View
                      accessible={true}
                      clickable={true}
                      isTVSelectable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flexDirection": "row",
                            "justifyContent": "flex-end",
                            "padding": 16,
                          }
                        }
                      >
                        <Text
                          style={
                            Object {
                              "color": "#505050",
                              "fontFamily": "Colfax-Bold",
                              "fontSize": 12,
                              "lineHeight": 17.28,
                            }
                          }
                        >
                          <Text
                            style={
                              Object {
                                "color": "#6bac43",
                              }
                            }
                          >
                            View All
                          </Text>
                        </Text>
                      </View>
                    </View>
                  </View>
                  <View
                    contentContainerStyle={
                      Object {
                        "padding": 8,
                        "paddingBottom": 0,
                      }
                    }
                    data={
                      Array [
                        Object {
                          "__typename": "UniversalContentItem",
                          "coverImage": Object {
                            "__typename": "ImageMedia",
                            "sources": Array [
                              Object {
                                "__typename": "ImageMediaSource",
                                "uri": "https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D62e0e2ba-2dac-468b-a852-7e8cf2533efc",
                              },
                            ],
                          },
                          "id": "UniversalContentItem:00bb7b364911281c97fc50f2a0d17b11",
                          "parentChannel": Object {
                            "__typename": "ContentChannel",
                            "id": "ContentChannel:965b6e6d7046a885bea4e300b5c0400d",
                            "name": "News",
                          },
                          "summary": "Come join us!",
                          "theme": null,
                          "title": "Anderson Family Cookout!",
                          "videos": Array [],
                        },
                        Object {
                          "__typename": "UniversalContentItem",
                          "coverImage": Object {
                            "__typename": "ImageMedia",
                            "sources": Array [
                              Object {
                                "__typename": "ImageMediaSource",
                                "uri": "https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Df3ba0936-8aab-46c1-8245-0e5aef637ae3",
                              },
                            ],
                          },
                          "id": "UniversalContentItem:7db601b238aa4345a818654300f83dd2",
                          "parentChannel": Object {
                            "__typename": "ContentChannel",
                            "id": "ContentChannel:965b6e6d7046a885bea4e300b5c0400d",
                            "name": "News",
                          },
                          "summary": "Don't miss a powerful message from preacher and speaker, Robert Madu.",
                          "theme": null,
                          "title": "Robert Madu is Coming to Christ Fellowship",
                          "videos": Array [],
                        },
                        Object {
                          "__typename": "UniversalContentItem",
                          "coverImage": Object {
                            "__typename": "ImageMedia",
                            "sources": Array [
                              Object {
                                "__typename": "ImageMediaSource",
                                "uri": "https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D58c037fa-cc7f-4d72-9571-a0cc0558e346",
                              },
                            ],
                          },
                          "id": "UniversalContentItem:296373ecb53580855cadffa0375ebe18",
                          "parentChannel": Object {
                            "__typename": "ContentChannel",
                            "id": "ContentChannel:965b6e6d7046a885bea4e300b5c0400d",
                            "name": "News",
                          },
                          "summary": "A time to connect with other guys who live nearby.",
                          "theme": null,
                          "title": "Guys Night!",
                          "videos": Array [],
                        },
                      ]
                    }
                    decelerationRate="fast"
                    horizontal={true}
                    initialScrollIndex={0}
                    keyExtractor={[Function]}
                    loadingStateObject={
                      Object {
                        "coverImage": Array [],
                        "id": "fake_id",
                        "title": "",
                      }
                    }
                    refreshing={false}
                    renderItem={[Function]}
                    showsHorizontalScrollIndicator={false}
                    snapToAlignment="start"
                    snapToInterval={256}
                    style={
                      Object {
                        "marginTop": -20,
                        "paddingBottom": 16,
                        "zIndex": 1,
                      }
                    }
                  />
                </View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "paddingLeft": 16,
                        "zIndex": 2,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flexGrow": 2,
                        }
                      }
                    >
                      <Text
                        style={
                          Object {
                            "color": "#303030",
                            "fontFamily": "Colfax-Medium",
                            "fontSize": 14,
                            "lineHeight": 20.16,
                          }
                        }
                      >
                        Articles
                      </Text>
                    </View>
                    <View
                      accessible={true}
                      clickable={true}
                      isTVSelectable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flexDirection": "row",
                            "justifyContent": "flex-end",
                            "padding": 16,
                          }
                        }
                      >
                        <Text
                          style={
                            Object {
                              "color": "#505050",
                              "fontFamily": "Colfax-Bold",
                              "fontSize": 12,
                              "lineHeight": 17.28,
                            }
                          }
                        >
                          <Text
                            style={
                              Object {
                                "color": "#6bac43",
                              }
                            }
                          >
                            View All
                          </Text>
                        </Text>
                      </View>
                    </View>
                  </View>
                  <View
                    contentContainerStyle={
                      Object {
                        "padding": 8,
                        "paddingBottom": 0,
                      }
                    }
                    data={
                      Array [
                        Object {
                          "__typename": "UniversalContentItem",
                          "coverImage": null,
                          "id": "UniversalContentItem:604a4a763a5fc0edfe386684ca6b3515",
                          "parentChannel": Object {
                            "__typename": "ContentChannel",
                            "id": "ContentChannel:4f68015ba18662a7409d1219a4ce013e",
                            "name": "Articles",
                          },
                          "summary": "Test article...",
                          "theme": null,
                          "title": "Test Article",
                          "videos": Array [],
                        },
                        Object {
                          "__typename": "UniversalContentItem",
                          "coverImage": null,
                          "id": "UniversalContentItem:c495ff18cd998ed516a798b6218907cd",
                          "parentChannel": Object {
                            "__typename": "ContentChannel",
                            "id": "ContentChannel:4f68015ba18662a7409d1219a4ce013e",
                            "name": "Articles",
                          },
                          "summary": "1. Be slow What would it look like to live your life at half-speed?",
                          "theme": null,
                          "title": "10 ways to refresh your spirit every day",
                          "videos": Array [],
                        },
                        Object {
                          "__typename": "UniversalContentItem",
                          "coverImage": null,
                          "id": "UniversalContentItem:95ff79f60a028b1b506aaeedf8b4c6ae",
                          "parentChannel": Object {
                            "__typename": "ContentChannel",
                            "id": "ContentChannel:4f68015ba18662a7409d1219a4ce013e",
                            "name": "Articles",
                          },
                          "summary": "Get in the Groove
Celebrate your freedom in Christ — in the car, shower, cubicle or wherever you go — with this playlist of NewSpring Worship's favorite songs of the summer.",
                          "theme": null,
                          "title": "Live for Freedom Toolkit",
                          "videos": Array [],
                        },
                      ]
                    }
                    decelerationRate="fast"
                    horizontal={true}
                    initialScrollIndex={0}
                    keyExtractor={[Function]}
                    loadingStateObject={
                      Object {
                        "coverImage": Array [],
                        "id": "fake_id",
                        "title": "",
                      }
                    }
                    refreshing={false}
                    renderItem={[Function]}
                    showsHorizontalScrollIndicator={false}
                    snapToAlignment="start"
                    snapToInterval={256}
                    style={
                      Object {
                        "marginTop": -20,
                        "paddingBottom": 16,
                        "zIndex": 1,
                      }
                    }
                  />
                </View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "paddingLeft": 16,
                        "zIndex": 2,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flexGrow": 2,
                        }
                      }
                    >
                      <Text
                        style={
                          Object {
                            "color": "#303030",
                            "fontFamily": "Colfax-Medium",
                            "fontSize": 14,
                            "lineHeight": 20.16,
                          }
                        }
                      >
                        Sermon Series
                      </Text>
                    </View>
                    <View
                      accessible={true}
                      clickable={true}
                      isTVSelectable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flexDirection": "row",
                            "justifyContent": "flex-end",
                            "padding": 16,
                          }
                        }
                      >
                        <Text
                          style={
                            Object {
                              "color": "#505050",
                              "fontFamily": "Colfax-Bold",
                              "fontSize": 12,
                              "lineHeight": 17.28,
                            }
                          }
                        >
                          <Text
                            style={
                              Object {
                                "color": "#6bac43",
                              }
                            }
                          >
                            View All
                          </Text>
                        </Text>
                      </View>
                    </View>
                  </View>
                  <View
                    contentContainerStyle={
                      Object {
                        "padding": 8,
                        "paddingBottom": 0,
                      }
                    }
                    data={
                      Array [
                        Object {
                          "__typename": "ContentSeriesContentItem",
                          "coverImage": Object {
                            "__typename": "ImageMedia",
                            "sources": Array [
                              Object {
                                "__typename": "ImageMediaSource",
                                "uri": "https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D98be229f-dfed-4344-86ab-0d11666fc781",
                              },
                            ],
                          },
                          "id": "ContentSeriesContentItem:6d8dc8e4bad017f815ae0cac8bf692bb",
                          "parentChannel": Object {
                            "__typename": "ContentChannel",
                            "id": "ContentChannel:a0f64573eabf00a607bec911794d50fb",
                            "name": "Sermon Series",
                          },
                          "summary": "Have you come into relationship with Jesus Christ?",
                          "theme": null,
                          "title": "The New Weekend Experience",
                          "videos": Array [
                            Object {
                              "__typename": "VideoMedia",
                              "sources": Array [],
                            },
                            Object {
                              "__typename": "VideoMedia",
                              "sources": Array [],
                            },
                          ],
                        },
                        Object {
                          "__typename": "ContentSeriesContentItem",
                          "coverImage": Object {
                            "__typename": "ImageMedia",
                            "sources": Array [
                              Object {
                                "__typename": "ImageMediaSource",
                                "uri": "https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D50f4e3e3-2842-4991-9f64-8fc6fbb3067c",
                              },
                            ],
                          },
                          "id": "ContentSeriesContentItem:08449058d438ebeaffe9adb7a8e633cc",
                          "parentChannel": Object {
                            "__typename": "ContentChannel",
                            "id": "ContentChannel:a0f64573eabf00a607bec911794d50fb",
                            "name": "Sermon Series",
                          },
                          "summary": "",
                          "theme": null,
                          "title": "Gathering",
                          "videos": Array [
                            Object {
                              "__typename": "VideoMedia",
                              "sources": Array [],
                            },
                            Object {
                              "__typename": "VideoMedia",
                              "sources": Array [],
                            },
                          ],
                        },
                        Object {
                          "__typename": "ContentSeriesContentItem",
                          "coverImage": Object {
                            "__typename": "ImageMedia",
                            "sources": Array [
                              Object {
                                "__typename": "ImageMediaSource",
                                "uri": "https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D3e3e38d2-d804-45db-b45a-3b7a82c415d1",
                              },
                            ],
                          },
                          "id": "ContentSeriesContentItem:b74c2d295a0cf1340232ffa8be856c00",
                          "parentChannel": Object {
                            "__typename": "ContentChannel",
                            "id": "ContentChannel:a0f64573eabf00a607bec911794d50fb",
                            "name": "Sermon Series",
                          },
                          "summary": "",
                          "theme": null,
                          "title": "Gauntlet 2018",
                          "videos": Array [
                            Object {
                              "__typename": "VideoMedia",
                              "sources": Array [],
                            },
                            Object {
                              "__typename": "VideoMedia",
                              "sources": Array [],
                            },
                          ],
                        },
                      ]
                    }
                    decelerationRate="fast"
                    horizontal={true}
                    initialScrollIndex={0}
                    keyExtractor={[Function]}
                    loadingStateObject={
                      Object {
                        "coverImage": Array [],
                        "id": "fake_id",
                        "title": "",
                      }
                    }
                    refreshing={false}
                    renderItem={[Function]}
                    showsHorizontalScrollIndicator={false}
                    snapToAlignment="start"
                    snapToInterval={256}
                    style={
                      Object {
                        "marginTop": -20,
                        "paddingBottom": 16,
                        "zIndex": 1,
                      }
                    }
                  />
                </View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "paddingLeft": 16,
                        "zIndex": 2,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flexGrow": 2,
                        }
                      }
                    >
                      <Text
                        style={
                          Object {
                            "color": "#303030",
                            "fontFamily": "Colfax-Medium",
                            "fontSize": 14,
                            "lineHeight": 20.16,
                          }
                        }
                      >
                        Devotion Series
                      </Text>
                    </View>
                    <View
                      accessible={true}
                      clickable={true}
                      isTVSelectable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flexDirection": "row",
                            "justifyContent": "flex-end",
                            "padding": 16,
                          }
                        }
                      >
                        <Text
                          style={
                            Object {
                              "color": "#505050",
                              "fontFamily": "Colfax-Bold",
                              "fontSize": 12,
                              "lineHeight": 17.28,
                            }
                          }
                        >
                          <Text
                            style={
                              Object {
                                "color": "#6bac43",
                              }
                            }
                          >
                            View All
                          </Text>
                        </Text>
                      </View>
                    </View>
                  </View>
                  <View
                    contentContainerStyle={
                      Object {
                        "padding": 8,
                        "paddingBottom": 0,
                      }
                    }
                    data={
                      Array [
                        Object {
                          "__typename": "ContentSeriesContentItem",
                          "coverImage": Object {
                            "__typename": "ImageMedia",
                            "sources": Array [
                              Object {
                                "__typename": "ImageMediaSource",
                                "uri": "https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D31af1a61-360c-4b1e-8e62-45517c06a9a2",
                              },
                            ],
                          },
                          "id": "ContentSeriesContentItem:b085ec27d53006e9e6b95f3ac57da581",
                          "parentChannel": Object {
                            "__typename": "ContentChannel",
                            "id": "ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e",
                            "name": "Devotion Series",
                          },
                          "summary": "Have you ever had to deliver difficult news?",
                          "theme": null,
                          "title": "Jeremiah: A 33-Day Devotional",
                          "videos": Array [
                            Object {
                              "__typename": "VideoMedia",
                              "sources": Array [],
                            },
                          ],
                        },
                        Object {
                          "__typename": "ContentSeriesContentItem",
                          "coverImage": Object {
                            "__typename": "ImageMedia",
                            "sources": Array [
                              Object {
                                "__typename": "ImageMediaSource",
                                "uri": "https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f",
                              },
                            ],
                          },
                          "id": "ContentSeriesContentItem:71bfdac0b98ea1b72a63ff4ea64e3c5a",
                          "parentChannel": Object {
                            "__typename": "ContentChannel",
                            "id": "ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e",
                            "name": "Devotion Series",
                          },
                          "summary": "",
                          "theme": null,
                          "title": "How To Be A Better Leader: A 7-Day Devotional",
                          "videos": Array [
                            Object {
                              "__typename": "VideoMedia",
                              "sources": Array [],
                            },
                          ],
                        },
                        Object {
                          "__typename": "ContentSeriesContentItem",
                          "coverImage": Object {
                            "__typename": "ImageMedia",
                            "sources": Array [
                              Object {
                                "__typename": "ImageMediaSource",
                                "uri": "https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D70b0b57c-5a15-4f46-8e6a-c759231685bf",
                              },
                            ],
                          },
                          "id": "ContentSeriesContentItem:44fd3b82373ea8f197bd1e1e77c4bed0",
                          "parentChannel": Object {
                            "__typename": "ContentChannel",
                            "id": "ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e",
                            "name": "Devotion Series",
                          },
                          "summary": "",
                          "theme": null,
                          "title": "2 Thessalonians: A 5-Day Devotional",
                          "videos": Array [
                            Object {
                              "__typename": "VideoMedia",
                              "sources": Array [],
                            },
                          ],
                        },
                      ]
                    }
                    decelerationRate="fast"
                    horizontal={true}
                    initialScrollIndex={0}
                    keyExtractor={[Function]}
                    loadingStateObject={
                      Object {
                        "coverImage": Array [],
                        "id": "fake_id",
                        "title": "",
                      }
                    }
                    refreshing={false}
                    renderItem={[Function]}
                    showsHorizontalScrollIndicator={false}
                    snapToAlignment="start"
                    snapToInterval={256}
                    style={
                      Object {
                        "marginTop": -20,
                        "paddingBottom": 16,
                        "zIndex": 1,
                      }
                    }
                  />
                </View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "paddingLeft": 16,
                        "zIndex": 2,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flexGrow": 2,
                        }
                      }
                    >
                      <Text
                        style={
                          Object {
                            "color": "#303030",
                            "fontFamily": "Colfax-Medium",
                            "fontSize": 14,
                            "lineHeight": 20.16,
                          }
                        }
                      >
                        Stories
                      </Text>
                    </View>
                    <View
                      accessible={true}
                      clickable={true}
                      isTVSelectable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flexDirection": "row",
                            "justifyContent": "flex-end",
                            "padding": 16,
                          }
                        }
                      >
                        <Text
                          style={
                            Object {
                              "color": "#505050",
                              "fontFamily": "Colfax-Bold",
                              "fontSize": 12,
                              "lineHeight": 17.28,
                            }
                          }
                        >
                          <Text
                            style={
                              Object {
                                "color": "#6bac43",
                              }
                            }
                          >
                            View All
                          </Text>
                        </Text>
                      </View>
                    </View>
                  </View>
                  <View
                    contentContainerStyle={
                      Object {
                        "padding": 8,
                        "paddingBottom": 0,
                      }
                    }
                    data={
                      Array [
                        Object {
                          "__typename": "UniversalContentItem",
                          "coverImage": Object {
                            "__typename": "ImageMedia",
                            "sources": Array [
                              Object {
                                "__typename": "ImageMediaSource",
                                "uri": "https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D2a65e561-cd6e-4590-bb37-029a21c554e8",
                              },
                            ],
                          },
                          "id": "UniversalContentItem:cf8fa657f23af88a2d63f7e4a2237db8",
                          "parentChannel": Object {
                            "__typename": "ContentChannel",
                            "id": "ContentChannel:be7381e9c2fea9f41504cd98d4b14321",
                            "name": "Stories",
                          },
                          "summary": "My father, Darwin, has always been involved in my life.",
                          "theme": null,
                          "title": "The surprising journey that changed me and my dad",
                          "videos": Array [],
                        },
                        Object {
                          "__typename": "UniversalContentItem",
                          "coverImage": Object {
                            "__typename": "ImageMedia",
                            "sources": Array [
                              Object {
                                "__typename": "ImageMediaSource",
                                "uri": "https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D0305285f-1155-4405-ba38-a61b9c8558be",
                              },
                            ],
                          },
                          "id": "UniversalContentItem:2e17f5a66407d114ab9f2392b03ebccd",
                          "parentChannel": Object {
                            "__typename": "ContentChannel",
                            "id": "ContentChannel:be7381e9c2fea9f41504cd98d4b14321",
                            "name": "Stories",
                          },
                          "summary": "Brian Kalwat was just trying to knock something off his honey-do list.",
                          "theme": null,
                          "title": "When I lost hope, my church family had my back",
                          "videos": Array [],
                        },
                        Object {
                          "__typename": "UniversalContentItem",
                          "coverImage": Object {
                            "__typename": "ImageMedia",
                            "sources": Array [
                              Object {
                                "__typename": "ImageMediaSource",
                                "uri": "https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Da65bc45d-f961-4b7e-a899-63eb1f9b8da9",
                              },
                            ],
                          },
                          "id": "UniversalContentItem:ae8ec75906ba7437c49ad2534b5024db",
                          "parentChannel": Object {
                            "__typename": "ContentChannel",
                            "id": "ContentChannel:be7381e9c2fea9f41504cd98d4b14321",
                            "name": "Stories",
                          },
                          "summary": "Cornelius &amp; Stephanie Mack, proud parents of a Special Friends adult, share about their experience
Our son Cameron began attending Willow Creek Special Friends in 2015.",
                          "theme": null,
                          "title": "A Place to Worship Free of Fear",
                          "videos": Array [],
                        },
                      ]
                    }
                    decelerationRate="fast"
                    horizontal={true}
                    initialScrollIndex={0}
                    keyExtractor={[Function]}
                    loadingStateObject={
                      Object {
                        "coverImage": Array [],
                        "id": "fake_id",
                        "title": "",
                      }
                    }
                    refreshing={false}
                    renderItem={[Function]}
                    showsHorizontalScrollIndicator={false}
                    snapToAlignment="start"
                    snapToInterval={256}
                    style={
                      Object {
                        "marginTop": -20,
                        "paddingBottom": 16,
                        "zIndex": 1,
                      }
                    }
                  />
                </View>
              </View>
            </RCTScrollView>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        pointerEvents="box-none"
        style={
          Object {
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#FFF",
              "transform": Array [
                Object {
                  "translateX": 0,
                },
              ],
            }
          }
        >
          <View
            onLayout={[Function]}
            pointerEvents="box-none"
            style={
              Object {
                "backgroundColor": "#FFF",
                "borderBottomColor": "#A7A7AA",
                "borderBottomWidth": 0.5,
                "height": 64,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 20,
              }
            }
          >
            <View
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                style={
                  Object {
                    "bottom": 0,
                    "flexDirection": "row",
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "transparent",
                      "bottom": 0,
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "left": 0,
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    accessibilityTraits="header"
                    allowFontScaling={false}
                    numberOfLines={1}
                    onLayout={[Function]}
                    style={
                      Object {
                        "color": "rgba(0, 0, 0, .9)",
                        "fontSize": 17,
                        "fontWeight": "600",
                        "marginHorizontal": 16,
                        "textAlign": "center",
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`The DiscoverFeed component should render a loading state 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    enabled={false}
    hitSlop={
      Object {
        "right": 50,
      }
    }
    maxDeltaY={20}
    minOffsetX={5}
    onGestureEvent={[Function]}
    onHandlerStateChange={[Function]}
  >
    <View
      style={
        Object {
          "backgroundColor": "#eee",
          "flex": 1,
          "flexDirection": "column-reverse",
          "overflow": "hidden",
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          pointerEvents="auto"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "paddingTop": 64,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "transform": Array [
                Object {
                  "translateX": 0,
                },
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
        >
          <View
            accessibilityElementsHidden={false}
            style={
              Object {
                "backgroundColor": "#fff",
                "flex": 1,
              }
            }
          >
            <RCTScrollView
              data={
                Array [
                  Object {
                    "id": "fakeId0",
                    "isLoading": true,
                    "name": "",
                  },
                  Object {
                    "id": "fakeId1",
                    "isLoading": true,
                    "name": "",
                  },
                  Object {
                    "id": "fakeId2",
                    "isLoading": true,
                    "name": "",
                  },
                  Object {
                    "id": "fakeId3",
                    "isLoading": true,
                    "name": "",
                  },
                  Object {
                    "id": "fakeId4",
                    "isLoading": true,
                    "name": "",
                  },
                  Object {
                    "id": "fakeId5",
                    "isLoading": true,
                    "name": "",
                  },
                  Object {
                    "id": "fakeId6",
                    "isLoading": true,
                    "name": "",
                  },
                  Object {
                    "id": "fakeId7",
                    "isLoading": true,
                    "name": "",
                  },
                  Object {
                    "id": "fakeId8",
                    "isLoading": true,
                    "name": "",
                  },
                  Object {
                    "id": "fakeId9",
                    "isLoading": true,
                    "name": "",
                  },
                ]
              }
              disableVirtualization={false}
              getItem={[Function]}
              getItemCount={[Function]}
              horizontal={false}
              initialNumToRender={10}
              keyExtractor={[Function]}
              loadingStateObject={
                Object {
                  "isLoading": true,
                  "name": "",
                }
              }
              maxToRenderPerBatch={10}
              numColumns={1}
              onContentSizeChange={[Function]}
              onEndReached={[Function]}
              onEndReachedThreshold={0.7}
              onLayout={[Function]}
              onMomentumScrollEnd={[Function]}
              onRefresh={[Function]}
              onScroll={[Function]}
              onScrollBeginDrag={[Function]}
              onScrollEndDrag={[Function]}
              refreshControl={
                <RefreshControlMock
                  onRefresh={[Function]}
                  refreshing={true}
                />
              }
              refreshing={true}
              removeClippedSubviews={false}
              renderItem={[Function]}
              scrollEventThrottle={50}
              stickyHeaderIndices={Array []}
              updateCellsBatchingPeriod={50}
              viewabilityConfigCallbackPairs={Array []}
              windowSize={21}
            >
              <RCTRefreshControl />
              <View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "paddingLeft": 16,
                        "zIndex": 2,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flexGrow": 2,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignSelf": "stretch",
                            "backgroundColor": "#dddddd",
                            "borderRadius": 16,
                            "height": 14,
                            "marginVertical": 3.08,
                            "width": "60%",
                          }
                        }
                      />
                    </View>
                    <View
                      accessible={true}
                      clickable={true}
                      isTVSelectable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flexDirection": "row",
                            "justifyContent": "flex-end",
                            "padding": 16,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignSelf": "stretch",
                              "backgroundColor": "#dddddd",
                              "borderRadius": 16,
                              "height": 12,
                              "marginVertical": 2.6400000000000006,
                              "width": "50%",
                            }
                          }
                        />
                      </View>
                    </View>
                  </View>
                  <View
                    contentContainerStyle={
                      Object {
                        "padding": 8,
                        "paddingBottom": 0,
                      }
                    }
                    data={
                      Array [
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId0",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId1",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId2",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId3",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId4",
                          "title": "",
                        },
                      ]
                    }
                    decelerationRate="fast"
                    fetchMore={[Function]}
                    horizontal={true}
                    initialScrollIndex={0}
                    keyExtractor={[Function]}
                    loadingStateObject={
                      Object {
                        "coverImage": Array [],
                        "id": "fake_id",
                        "title": "",
                      }
                    }
                    refreshing={true}
                    renderItem={[Function]}
                    showsHorizontalScrollIndicator={false}
                    snapToAlignment="start"
                    snapToInterval={256}
                    style={
                      Object {
                        "marginTop": -20,
                        "paddingBottom": 16,
                        "zIndex": 1,
                      }
                    }
                  />
                </View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "paddingLeft": 16,
                        "zIndex": 2,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flexGrow": 2,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignSelf": "stretch",
                            "backgroundColor": "#dddddd",
                            "borderRadius": 16,
                            "height": 14,
                            "marginVertical": 3.08,
                            "width": "60%",
                          }
                        }
                      />
                    </View>
                    <View
                      accessible={true}
                      clickable={true}
                      isTVSelectable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flexDirection": "row",
                            "justifyContent": "flex-end",
                            "padding": 16,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignSelf": "stretch",
                              "backgroundColor": "#dddddd",
                              "borderRadius": 16,
                              "height": 12,
                              "marginVertical": 2.6400000000000006,
                              "width": "50%",
                            }
                          }
                        />
                      </View>
                    </View>
                  </View>
                  <View
                    contentContainerStyle={
                      Object {
                        "padding": 8,
                        "paddingBottom": 0,
                      }
                    }
                    data={
                      Array [
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId0",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId1",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId2",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId3",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId4",
                          "title": "",
                        },
                      ]
                    }
                    decelerationRate="fast"
                    fetchMore={[Function]}
                    horizontal={true}
                    initialScrollIndex={0}
                    keyExtractor={[Function]}
                    loadingStateObject={
                      Object {
                        "coverImage": Array [],
                        "id": "fake_id",
                        "title": "",
                      }
                    }
                    refreshing={true}
                    renderItem={[Function]}
                    showsHorizontalScrollIndicator={false}
                    snapToAlignment="start"
                    snapToInterval={256}
                    style={
                      Object {
                        "marginTop": -20,
                        "paddingBottom": 16,
                        "zIndex": 1,
                      }
                    }
                  />
                </View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "paddingLeft": 16,
                        "zIndex": 2,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flexGrow": 2,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignSelf": "stretch",
                            "backgroundColor": "#dddddd",
                            "borderRadius": 16,
                            "height": 14,
                            "marginVertical": 3.08,
                            "width": "60%",
                          }
                        }
                      />
                    </View>
                    <View
                      accessible={true}
                      clickable={true}
                      isTVSelectable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flexDirection": "row",
                            "justifyContent": "flex-end",
                            "padding": 16,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignSelf": "stretch",
                              "backgroundColor": "#dddddd",
                              "borderRadius": 16,
                              "height": 12,
                              "marginVertical": 2.6400000000000006,
                              "width": "50%",
                            }
                          }
                        />
                      </View>
                    </View>
                  </View>
                  <View
                    contentContainerStyle={
                      Object {
                        "padding": 8,
                        "paddingBottom": 0,
                      }
                    }
                    data={
                      Array [
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId0",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId1",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId2",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId3",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId4",
                          "title": "",
                        },
                      ]
                    }
                    decelerationRate="fast"
                    fetchMore={[Function]}
                    horizontal={true}
                    initialScrollIndex={0}
                    keyExtractor={[Function]}
                    loadingStateObject={
                      Object {
                        "coverImage": Array [],
                        "id": "fake_id",
                        "title": "",
                      }
                    }
                    refreshing={true}
                    renderItem={[Function]}
                    showsHorizontalScrollIndicator={false}
                    snapToAlignment="start"
                    snapToInterval={256}
                    style={
                      Object {
                        "marginTop": -20,
                        "paddingBottom": 16,
                        "zIndex": 1,
                      }
                    }
                  />
                </View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "paddingLeft": 16,
                        "zIndex": 2,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flexGrow": 2,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignSelf": "stretch",
                            "backgroundColor": "#dddddd",
                            "borderRadius": 16,
                            "height": 14,
                            "marginVertical": 3.08,
                            "width": "60%",
                          }
                        }
                      />
                    </View>
                    <View
                      accessible={true}
                      clickable={true}
                      isTVSelectable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flexDirection": "row",
                            "justifyContent": "flex-end",
                            "padding": 16,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignSelf": "stretch",
                              "backgroundColor": "#dddddd",
                              "borderRadius": 16,
                              "height": 12,
                              "marginVertical": 2.6400000000000006,
                              "width": "50%",
                            }
                          }
                        />
                      </View>
                    </View>
                  </View>
                  <View
                    contentContainerStyle={
                      Object {
                        "padding": 8,
                        "paddingBottom": 0,
                      }
                    }
                    data={
                      Array [
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId0",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId1",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId2",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId3",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId4",
                          "title": "",
                        },
                      ]
                    }
                    decelerationRate="fast"
                    fetchMore={[Function]}
                    horizontal={true}
                    initialScrollIndex={0}
                    keyExtractor={[Function]}
                    loadingStateObject={
                      Object {
                        "coverImage": Array [],
                        "id": "fake_id",
                        "title": "",
                      }
                    }
                    refreshing={true}
                    renderItem={[Function]}
                    showsHorizontalScrollIndicator={false}
                    snapToAlignment="start"
                    snapToInterval={256}
                    style={
                      Object {
                        "marginTop": -20,
                        "paddingBottom": 16,
                        "zIndex": 1,
                      }
                    }
                  />
                </View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "paddingLeft": 16,
                        "zIndex": 2,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flexGrow": 2,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignSelf": "stretch",
                            "backgroundColor": "#dddddd",
                            "borderRadius": 16,
                            "height": 14,
                            "marginVertical": 3.08,
                            "width": "60%",
                          }
                        }
                      />
                    </View>
                    <View
                      accessible={true}
                      clickable={true}
                      isTVSelectable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flexDirection": "row",
                            "justifyContent": "flex-end",
                            "padding": 16,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignSelf": "stretch",
                              "backgroundColor": "#dddddd",
                              "borderRadius": 16,
                              "height": 12,
                              "marginVertical": 2.6400000000000006,
                              "width": "50%",
                            }
                          }
                        />
                      </View>
                    </View>
                  </View>
                  <View
                    contentContainerStyle={
                      Object {
                        "padding": 8,
                        "paddingBottom": 0,
                      }
                    }
                    data={
                      Array [
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId0",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId1",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId2",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId3",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId4",
                          "title": "",
                        },
                      ]
                    }
                    decelerationRate="fast"
                    fetchMore={[Function]}
                    horizontal={true}
                    initialScrollIndex={0}
                    keyExtractor={[Function]}
                    loadingStateObject={
                      Object {
                        "coverImage": Array [],
                        "id": "fake_id",
                        "title": "",
                      }
                    }
                    refreshing={true}
                    renderItem={[Function]}
                    showsHorizontalScrollIndicator={false}
                    snapToAlignment="start"
                    snapToInterval={256}
                    style={
                      Object {
                        "marginTop": -20,
                        "paddingBottom": 16,
                        "zIndex": 1,
                      }
                    }
                  />
                </View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "paddingLeft": 16,
                        "zIndex": 2,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flexGrow": 2,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignSelf": "stretch",
                            "backgroundColor": "#dddddd",
                            "borderRadius": 16,
                            "height": 14,
                            "marginVertical": 3.08,
                            "width": "60%",
                          }
                        }
                      />
                    </View>
                    <View
                      accessible={true}
                      clickable={true}
                      isTVSelectable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flexDirection": "row",
                            "justifyContent": "flex-end",
                            "padding": 16,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignSelf": "stretch",
                              "backgroundColor": "#dddddd",
                              "borderRadius": 16,
                              "height": 12,
                              "marginVertical": 2.6400000000000006,
                              "width": "50%",
                            }
                          }
                        />
                      </View>
                    </View>
                  </View>
                  <View
                    contentContainerStyle={
                      Object {
                        "padding": 8,
                        "paddingBottom": 0,
                      }
                    }
                    data={
                      Array [
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId0",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId1",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId2",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId3",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId4",
                          "title": "",
                        },
                      ]
                    }
                    decelerationRate="fast"
                    fetchMore={[Function]}
                    horizontal={true}
                    initialScrollIndex={0}
                    keyExtractor={[Function]}
                    loadingStateObject={
                      Object {
                        "coverImage": Array [],
                        "id": "fake_id",
                        "title": "",
                      }
                    }
                    refreshing={true}
                    renderItem={[Function]}
                    showsHorizontalScrollIndicator={false}
                    snapToAlignment="start"
                    snapToInterval={256}
                    style={
                      Object {
                        "marginTop": -20,
                        "paddingBottom": 16,
                        "zIndex": 1,
                      }
                    }
                  />
                </View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "paddingLeft": 16,
                        "zIndex": 2,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flexGrow": 2,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignSelf": "stretch",
                            "backgroundColor": "#dddddd",
                            "borderRadius": 16,
                            "height": 14,
                            "marginVertical": 3.08,
                            "width": "60%",
                          }
                        }
                      />
                    </View>
                    <View
                      accessible={true}
                      clickable={true}
                      isTVSelectable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flexDirection": "row",
                            "justifyContent": "flex-end",
                            "padding": 16,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignSelf": "stretch",
                              "backgroundColor": "#dddddd",
                              "borderRadius": 16,
                              "height": 12,
                              "marginVertical": 2.6400000000000006,
                              "width": "50%",
                            }
                          }
                        />
                      </View>
                    </View>
                  </View>
                  <View
                    contentContainerStyle={
                      Object {
                        "padding": 8,
                        "paddingBottom": 0,
                      }
                    }
                    data={
                      Array [
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId0",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId1",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId2",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId3",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId4",
                          "title": "",
                        },
                      ]
                    }
                    decelerationRate="fast"
                    fetchMore={[Function]}
                    horizontal={true}
                    initialScrollIndex={0}
                    keyExtractor={[Function]}
                    loadingStateObject={
                      Object {
                        "coverImage": Array [],
                        "id": "fake_id",
                        "title": "",
                      }
                    }
                    refreshing={true}
                    renderItem={[Function]}
                    showsHorizontalScrollIndicator={false}
                    snapToAlignment="start"
                    snapToInterval={256}
                    style={
                      Object {
                        "marginTop": -20,
                        "paddingBottom": 16,
                        "zIndex": 1,
                      }
                    }
                  />
                </View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "paddingLeft": 16,
                        "zIndex": 2,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flexGrow": 2,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignSelf": "stretch",
                            "backgroundColor": "#dddddd",
                            "borderRadius": 16,
                            "height": 14,
                            "marginVertical": 3.08,
                            "width": "60%",
                          }
                        }
                      />
                    </View>
                    <View
                      accessible={true}
                      clickable={true}
                      isTVSelectable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flexDirection": "row",
                            "justifyContent": "flex-end",
                            "padding": 16,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignSelf": "stretch",
                              "backgroundColor": "#dddddd",
                              "borderRadius": 16,
                              "height": 12,
                              "marginVertical": 2.6400000000000006,
                              "width": "50%",
                            }
                          }
                        />
                      </View>
                    </View>
                  </View>
                  <View
                    contentContainerStyle={
                      Object {
                        "padding": 8,
                        "paddingBottom": 0,
                      }
                    }
                    data={
                      Array [
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId0",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId1",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId2",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId3",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId4",
                          "title": "",
                        },
                      ]
                    }
                    decelerationRate="fast"
                    fetchMore={[Function]}
                    horizontal={true}
                    initialScrollIndex={0}
                    keyExtractor={[Function]}
                    loadingStateObject={
                      Object {
                        "coverImage": Array [],
                        "id": "fake_id",
                        "title": "",
                      }
                    }
                    refreshing={true}
                    renderItem={[Function]}
                    showsHorizontalScrollIndicator={false}
                    snapToAlignment="start"
                    snapToInterval={256}
                    style={
                      Object {
                        "marginTop": -20,
                        "paddingBottom": 16,
                        "zIndex": 1,
                      }
                    }
                  />
                </View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "paddingLeft": 16,
                        "zIndex": 2,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flexGrow": 2,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignSelf": "stretch",
                            "backgroundColor": "#dddddd",
                            "borderRadius": 16,
                            "height": 14,
                            "marginVertical": 3.08,
                            "width": "60%",
                          }
                        }
                      />
                    </View>
                    <View
                      accessible={true}
                      clickable={true}
                      isTVSelectable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flexDirection": "row",
                            "justifyContent": "flex-end",
                            "padding": 16,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignSelf": "stretch",
                              "backgroundColor": "#dddddd",
                              "borderRadius": 16,
                              "height": 12,
                              "marginVertical": 2.6400000000000006,
                              "width": "50%",
                            }
                          }
                        />
                      </View>
                    </View>
                  </View>
                  <View
                    contentContainerStyle={
                      Object {
                        "padding": 8,
                        "paddingBottom": 0,
                      }
                    }
                    data={
                      Array [
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId0",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId1",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId2",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId3",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId4",
                          "title": "",
                        },
                      ]
                    }
                    decelerationRate="fast"
                    fetchMore={[Function]}
                    horizontal={true}
                    initialScrollIndex={0}
                    keyExtractor={[Function]}
                    loadingStateObject={
                      Object {
                        "coverImage": Array [],
                        "id": "fake_id",
                        "title": "",
                      }
                    }
                    refreshing={true}
                    renderItem={[Function]}
                    showsHorizontalScrollIndicator={false}
                    snapToAlignment="start"
                    snapToInterval={256}
                    style={
                      Object {
                        "marginTop": -20,
                        "paddingBottom": 16,
                        "zIndex": 1,
                      }
                    }
                  />
                </View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "paddingLeft": 16,
                        "zIndex": 2,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flexGrow": 2,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignSelf": "stretch",
                            "backgroundColor": "#dddddd",
                            "borderRadius": 16,
                            "height": 14,
                            "marginVertical": 3.08,
                            "width": "60%",
                          }
                        }
                      />
                    </View>
                    <View
                      accessible={true}
                      clickable={true}
                      isTVSelectable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flexDirection": "row",
                            "justifyContent": "flex-end",
                            "padding": 16,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignSelf": "stretch",
                              "backgroundColor": "#dddddd",
                              "borderRadius": 16,
                              "height": 12,
                              "marginVertical": 2.6400000000000006,
                              "width": "50%",
                            }
                          }
                        />
                      </View>
                    </View>
                  </View>
                  <View
                    contentContainerStyle={
                      Object {
                        "padding": 8,
                        "paddingBottom": 0,
                      }
                    }
                    data={
                      Array [
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId0",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId1",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId2",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId3",
                          "title": "",
                        },
                        Object {
                          "coverImage": Array [],
                          "id": "fakeId4",
                          "title": "",
                        },
                      ]
                    }
                    decelerationRate="fast"
                    fetchMore={[Function]}
                    horizontal={true}
                    initialScrollIndex={0}
                    keyExtractor={[Function]}
                    loadingStateObject={
                      Object {
                        "coverImage": Array [],
                        "id": "fake_id",
                        "title": "",
                      }
                    }
                    refreshing={true}
                    renderItem={[Function]}
                    showsHorizontalScrollIndicator={false}
                    snapToAlignment="start"
                    snapToInterval={256}
                    style={
                      Object {
                        "marginTop": -20,
                        "paddingBottom": 16,
                        "zIndex": 1,
                      }
                    }
                  />
                </View>
              </View>
            </RCTScrollView>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        pointerEvents="box-none"
        style={
          Object {
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#FFF",
              "transform": Array [
                Object {
                  "translateX": 0,
                },
              ],
            }
          }
        >
          <View
            onLayout={[Function]}
            pointerEvents="box-none"
            style={
              Object {
                "backgroundColor": "#FFF",
                "borderBottomColor": "#A7A7AA",
                "borderBottomWidth": 0.5,
                "height": 64,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 20,
              }
            }
          >
            <View
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                style={
                  Object {
                    "bottom": 0,
                    "flexDirection": "row",
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "transparent",
                      "bottom": 0,
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "left": 0,
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    accessibilityTraits="header"
                    allowFontScaling={false}
                    numberOfLines={1}
                    onLayout={[Function]}
                    style={
                      Object {
                        "color": "rgba(0, 0, 0, .9)",
                        "fontSize": 17,
                        "fontWeight": "600",
                        "marginHorizontal": 16,
                        "textAlign": "center",
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
