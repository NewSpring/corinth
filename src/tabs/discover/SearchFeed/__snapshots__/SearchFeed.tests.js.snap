// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The SearchFeed component should render 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    enabled={false}
    hitSlop={
      Object {
        "right": 50,
      }
    }
    maxDeltaY={20}
    minOffsetX={5}
    onGestureEvent={[Function]}
    onHandlerStateChange={[Function]}
  >
    <View
      style={
        Object {
          "backgroundColor": "#eee",
          "flex": 1,
          "flexDirection": "column-reverse",
          "overflow": "hidden",
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          pointerEvents="auto"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "paddingTop": 64,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "transform": Array [
                Object {
                  "translateX": 0,
                },
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
        >
          <View
            accessibilityElementsHidden={false}
            style={
              Object {
                "backgroundColor": "#fff",
                "flex": 1,
              }
            }
          >
            <RCTScrollView
              ListEmptyComponent={[Function]}
              contentContainerStyle={Object {}}
              data={
                Array [
                  Object {
                    "__typename": "DevotionalContentItem",
                    "id": "DevotionalContentItem:561dfb7dbd8a5c093fd8385c7edaadbc",
                  },
                  Object {
                    "__typename": "UniversalContentItem",
                    "id": "UniversalContentItem:95ff79f60a028b1b506aaeedf8b4c6ae",
                  },
                  Object {
                    "__typename": "UniversalContentItem",
                    "id": "UniversalContentItem:895738f70482712adb3ab45a08c30456",
                  },
                  Object {
                    "__typename": "UniversalContentItem",
                    "id": "UniversalContentItem:296373ecb53580855cadffa0375ebe18",
                  },
                  Object {
                    "__typename": "UniversalContentItem",
                    "id": "UniversalContentItem:c495ff18cd998ed516a798b6218907cd",
                  },
                  Object {
                    "__typename": "DevotionalContentItem",
                    "id": "DevotionalContentItem:4dd74ceca9e09b5276e93cbf53821bd6",
                  },
                ]
              }
              disableVirtualization={false}
              getItem={[Function]}
              getItemCount={[Function]}
              hasContent={6}
              horizontal={false}
              initialNumToRender={10}
              keyExtractor={[Function]}
              maxToRenderPerBatch={10}
              numColumns={1}
              onContentSizeChange={[Function]}
              onEndReachedThreshold={0.7}
              onLayout={[Function]}
              onMomentumScrollEnd={[Function]}
              onPressItem={[Function]}
              onRefresh={[Function]}
              onScroll={[Function]}
              onScrollBeginDrag={[Function]}
              onScrollEndDrag={[Function]}
              refreshControl={
                <RefreshControlMock
                  onRefresh={[Function]}
                  refreshing={false}
                />
              }
              refreshing={false}
              removeClippedSubviews={false}
              renderItem={[Function]}
              scrollEventThrottle={50}
              stickyHeaderIndices={Array []}
              updateCellsBatchingPeriod={50}
              viewabilityConfigCallbackPairs={Array []}
              windowSize={21}
            >
              <RCTRefreshControl />
              <View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    accessible={true}
                    clickable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "transform": Array [
                          Object {
                            "scale": 1,
                          },
                        ],
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderRadius": 16,
                          "marginHorizontal": 16,
                          "marginVertical": 12,
                          "shadowColor": "rgba(8, 0, 20, 0.25)",
                          "shadowOffset": Object {
                            "height": 1,
                            "width": 0,
                          },
                          "shadowOpacity": 1,
                          "shadowRadius": 6,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderRadius": 16,
                            "overflow": "hidden",
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "paddingHorizontal": 16,
                              "paddingVertical": 16,
                            }
                          }
                        >
                          <View
                            flexed={false}
                            style={
                              Object {
                                "alignItems": "center",
                                "flex": null,
                                "flexDirection": "row",
                                "tintColor": "#2a4930",
                              }
                            }
                          >
                            <RNSVGSvgView
                              align="xMidYMid"
                              bbHeight={19.2}
                              bbWidth={19.2}
                              height={19.2}
                              meetOrSlice={0}
                              minX={0}
                              minY={0}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "borderWidth": 0,
                                  },
                                  undefined,
                                  null,
                                  Object {
                                    "flex": 0,
                                    "height": 19,
                                    "width": 19,
                                  },
                                ]
                              }
                              vbHeight={24}
                              vbWidth={24}
                              width={19.2}
                            >
                              <RNSVGGroup
                                fill={
                                  Array [
                                    0,
                                    4278190080,
                                  ]
                                }
                                fillOpacity={1}
                                fillRule={1}
                                font={Object {}}
                                matrix={
                                  Array [
                                    1,
                                    0,
                                    0,
                                    1,
                                    0,
                                    0,
                                  ]
                                }
                                opacity={1}
                                originX={0}
                                originY={0}
                                propList={Array []}
                                rotation={0}
                                scaleX={1}
                                scaleY={1}
                                skewX={0}
                                skewY={0}
                                stroke={null}
                                strokeDasharray={null}
                                strokeDashoffset={null}
                                strokeLinecap={0}
                                strokeLinejoin={0}
                                strokeMiterlimit={4}
                                strokeOpacity={1}
                                strokeWidth={1}
                                vectorEffect={0}
                                x={0}
                                y={0}
                              >
                                <RNSVGPath
                                  d="M21.8955 19.741l-9.091-16.3178c-.3145-.5643-1.2945-.5643-1.609 0L2.1045 19.741c-.148.2662-.138.5865.0255.8433.1655.2585.46.4157.779.4157h18.182c.319 0 .6136-.1572.778-.4148.1647-.2577.1747-.578.0265-.8442zM12 18.4235c-.5018 0-.909-.3847-.909-.8588 0-.474.4072-.8588.909-.8588.502 0 .909.3845.909.8586 0 .474-.407.8588-.909.8588zm.909-3.4353h-1.818V8.9764h1.818v6.0118z"
                                  fill={
                                    Array [
                                      0,
                                      4286940549,
                                    ]
                                  }
                                  fillOpacity={1}
                                  fillRule={1}
                                  matrix={
                                    Array [
                                      1,
                                      0,
                                      0,
                                      1,
                                      0,
                                      0,
                                    ]
                                  }
                                  opacity={1}
                                  originX={0}
                                  originY={0}
                                  propList={
                                    Array [
                                      "fill",
                                    ]
                                  }
                                  rotation={0}
                                  scaleX={1}
                                  scaleY={1}
                                  skewX={0}
                                  skewY={0}
                                  stroke={null}
                                  strokeDasharray={null}
                                  strokeDashoffset={null}
                                  strokeLinecap={0}
                                  strokeLinejoin={0}
                                  strokeMiterlimit={4}
                                  strokeOpacity={1}
                                  strokeWidth={1}
                                  vectorEffect={0}
                                  x={0}
                                  y={0}
                                />
                              </RNSVGGroup>
                            </RNSVGSvgView>
                            <View
                              style={
                                Object {
                                  "paddingHorizontal": 4,
                                }
                              }
                              withIcon="warning"
                            >
                              <Text
                                style={
                                  Object {
                                    "color": "#858585",
                                    "fontFamily": "Colfax-Bold",
                                    "fontSize": 12,
                                    "lineHeight": 17.28,
                                  }
                                }
                                tint="#858585"
                              >
                                Something went wrong
                              </Text>
                            </View>
                          </View>
                          <Text
                            style={
                              Object {
                                "color": "#505050",
                                "fontFamily": "Colfax-Bold",
                                "fontSize": 12,
                                "lineHeight": 17.28,
                              }
                            }
                          />
                          <Text
                            bold={false}
                            italic={false}
                            style={
                              Object {
                                "color": "#303030",
                                "fontFamily": "Colfax-Regular",
                                "fontSize": 16,
                                "lineHeight": 26,
                              }
                            }
                          >
                            Oh no! We're sorry! We logged your error and notified our team directly. In the mean time, please try again.
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    accessible={true}
                    clickable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "transform": Array [
                          Object {
                            "scale": 1,
                          },
                        ],
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderRadius": 16,
                          "marginHorizontal": 16,
                          "marginVertical": 12,
                          "shadowColor": "rgba(8, 0, 20, 0.25)",
                          "shadowOffset": Object {
                            "height": 1,
                            "width": 0,
                          },
                          "shadowOpacity": 1,
                          "shadowRadius": 6,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderRadius": 16,
                            "overflow": "hidden",
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "paddingHorizontal": 16,
                              "paddingVertical": 16,
                            }
                          }
                        >
                          <View
                            flexed={false}
                            style={
                              Object {
                                "alignItems": "center",
                                "flex": null,
                                "flexDirection": "row",
                                "tintColor": "#2a4930",
                              }
                            }
                          >
                            <RNSVGSvgView
                              align="xMidYMid"
                              bbHeight={19.2}
                              bbWidth={19.2}
                              height={19.2}
                              meetOrSlice={0}
                              minX={0}
                              minY={0}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "borderWidth": 0,
                                  },
                                  undefined,
                                  null,
                                  Object {
                                    "flex": 0,
                                    "height": 19,
                                    "width": 19,
                                  },
                                ]
                              }
                              vbHeight={24}
                              vbWidth={24}
                              width={19.2}
                            >
                              <RNSVGGroup
                                fill={
                                  Array [
                                    0,
                                    4278190080,
                                  ]
                                }
                                fillOpacity={1}
                                fillRule={1}
                                font={Object {}}
                                matrix={
                                  Array [
                                    1,
                                    0,
                                    0,
                                    1,
                                    0,
                                    0,
                                  ]
                                }
                                opacity={1}
                                originX={0}
                                originY={0}
                                propList={Array []}
                                rotation={0}
                                scaleX={1}
                                scaleY={1}
                                skewX={0}
                                skewY={0}
                                stroke={null}
                                strokeDasharray={null}
                                strokeDashoffset={null}
                                strokeLinecap={0}
                                strokeLinejoin={0}
                                strokeMiterlimit={4}
                                strokeOpacity={1}
                                strokeWidth={1}
                                vectorEffect={0}
                                x={0}
                                y={0}
                              >
                                <RNSVGPath
                                  d="M21.8955 19.741l-9.091-16.3178c-.3145-.5643-1.2945-.5643-1.609 0L2.1045 19.741c-.148.2662-.138.5865.0255.8433.1655.2585.46.4157.779.4157h18.182c.319 0 .6136-.1572.778-.4148.1647-.2577.1747-.578.0265-.8442zM12 18.4235c-.5018 0-.909-.3847-.909-.8588 0-.474.4072-.8588.909-.8588.502 0 .909.3845.909.8586 0 .474-.407.8588-.909.8588zm.909-3.4353h-1.818V8.9764h1.818v6.0118z"
                                  fill={
                                    Array [
                                      0,
                                      4286940549,
                                    ]
                                  }
                                  fillOpacity={1}
                                  fillRule={1}
                                  matrix={
                                    Array [
                                      1,
                                      0,
                                      0,
                                      1,
                                      0,
                                      0,
                                    ]
                                  }
                                  opacity={1}
                                  originX={0}
                                  originY={0}
                                  propList={
                                    Array [
                                      "fill",
                                    ]
                                  }
                                  rotation={0}
                                  scaleX={1}
                                  scaleY={1}
                                  skewX={0}
                                  skewY={0}
                                  stroke={null}
                                  strokeDasharray={null}
                                  strokeDashoffset={null}
                                  strokeLinecap={0}
                                  strokeLinejoin={0}
                                  strokeMiterlimit={4}
                                  strokeOpacity={1}
                                  strokeWidth={1}
                                  vectorEffect={0}
                                  x={0}
                                  y={0}
                                />
                              </RNSVGGroup>
                            </RNSVGSvgView>
                            <View
                              style={
                                Object {
                                  "paddingHorizontal": 4,
                                }
                              }
                              withIcon="warning"
                            >
                              <Text
                                style={
                                  Object {
                                    "color": "#858585",
                                    "fontFamily": "Colfax-Bold",
                                    "fontSize": 12,
                                    "lineHeight": 17.28,
                                  }
                                }
                                tint="#858585"
                              >
                                Something went wrong
                              </Text>
                            </View>
                          </View>
                          <Text
                            style={
                              Object {
                                "color": "#505050",
                                "fontFamily": "Colfax-Bold",
                                "fontSize": 12,
                                "lineHeight": 17.28,
                              }
                            }
                          />
                          <Text
                            bold={false}
                            italic={false}
                            style={
                              Object {
                                "color": "#303030",
                                "fontFamily": "Colfax-Regular",
                                "fontSize": 16,
                                "lineHeight": 26,
                              }
                            }
                          >
                            Oh no! We're sorry! We logged your error and notified our team directly. In the mean time, please try again.
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    accessible={true}
                    clickable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "transform": Array [
                          Object {
                            "scale": 1,
                          },
                        ],
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderRadius": 16,
                          "marginHorizontal": 16,
                          "marginVertical": 12,
                          "shadowColor": "rgba(8, 0, 20, 0.25)",
                          "shadowOffset": Object {
                            "height": 1,
                            "width": 0,
                          },
                          "shadowOpacity": 1,
                          "shadowRadius": 6,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderRadius": 16,
                            "overflow": "hidden",
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "paddingHorizontal": 16,
                              "paddingVertical": 16,
                            }
                          }
                        >
                          <View
                            flexed={false}
                            style={
                              Object {
                                "alignItems": "center",
                                "flex": null,
                                "flexDirection": "row",
                                "tintColor": "#2a4930",
                              }
                            }
                          >
                            <RNSVGSvgView
                              align="xMidYMid"
                              bbHeight={19.2}
                              bbWidth={19.2}
                              height={19.2}
                              meetOrSlice={0}
                              minX={0}
                              minY={0}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "borderWidth": 0,
                                  },
                                  undefined,
                                  null,
                                  Object {
                                    "flex": 0,
                                    "height": 19,
                                    "width": 19,
                                  },
                                ]
                              }
                              vbHeight={24}
                              vbWidth={24}
                              width={19.2}
                            >
                              <RNSVGGroup
                                fill={
                                  Array [
                                    0,
                                    4278190080,
                                  ]
                                }
                                fillOpacity={1}
                                fillRule={1}
                                font={Object {}}
                                matrix={
                                  Array [
                                    1,
                                    0,
                                    0,
                                    1,
                                    0,
                                    0,
                                  ]
                                }
                                opacity={1}
                                originX={0}
                                originY={0}
                                propList={Array []}
                                rotation={0}
                                scaleX={1}
                                scaleY={1}
                                skewX={0}
                                skewY={0}
                                stroke={null}
                                strokeDasharray={null}
                                strokeDashoffset={null}
                                strokeLinecap={0}
                                strokeLinejoin={0}
                                strokeMiterlimit={4}
                                strokeOpacity={1}
                                strokeWidth={1}
                                vectorEffect={0}
                                x={0}
                                y={0}
                              >
                                <RNSVGPath
                                  d="M21.8955 19.741l-9.091-16.3178c-.3145-.5643-1.2945-.5643-1.609 0L2.1045 19.741c-.148.2662-.138.5865.0255.8433.1655.2585.46.4157.779.4157h18.182c.319 0 .6136-.1572.778-.4148.1647-.2577.1747-.578.0265-.8442zM12 18.4235c-.5018 0-.909-.3847-.909-.8588 0-.474.4072-.8588.909-.8588.502 0 .909.3845.909.8586 0 .474-.407.8588-.909.8588zm.909-3.4353h-1.818V8.9764h1.818v6.0118z"
                                  fill={
                                    Array [
                                      0,
                                      4286940549,
                                    ]
                                  }
                                  fillOpacity={1}
                                  fillRule={1}
                                  matrix={
                                    Array [
                                      1,
                                      0,
                                      0,
                                      1,
                                      0,
                                      0,
                                    ]
                                  }
                                  opacity={1}
                                  originX={0}
                                  originY={0}
                                  propList={
                                    Array [
                                      "fill",
                                    ]
                                  }
                                  rotation={0}
                                  scaleX={1}
                                  scaleY={1}
                                  skewX={0}
                                  skewY={0}
                                  stroke={null}
                                  strokeDasharray={null}
                                  strokeDashoffset={null}
                                  strokeLinecap={0}
                                  strokeLinejoin={0}
                                  strokeMiterlimit={4}
                                  strokeOpacity={1}
                                  strokeWidth={1}
                                  vectorEffect={0}
                                  x={0}
                                  y={0}
                                />
                              </RNSVGGroup>
                            </RNSVGSvgView>
                            <View
                              style={
                                Object {
                                  "paddingHorizontal": 4,
                                }
                              }
                              withIcon="warning"
                            >
                              <Text
                                style={
                                  Object {
                                    "color": "#858585",
                                    "fontFamily": "Colfax-Bold",
                                    "fontSize": 12,
                                    "lineHeight": 17.28,
                                  }
                                }
                                tint="#858585"
                              >
                                Something went wrong
                              </Text>
                            </View>
                          </View>
                          <Text
                            style={
                              Object {
                                "color": "#505050",
                                "fontFamily": "Colfax-Bold",
                                "fontSize": 12,
                                "lineHeight": 17.28,
                              }
                            }
                          />
                          <Text
                            bold={false}
                            italic={false}
                            style={
                              Object {
                                "color": "#303030",
                                "fontFamily": "Colfax-Regular",
                                "fontSize": 16,
                                "lineHeight": 26,
                              }
                            }
                          >
                            Oh no! We're sorry! We logged your error and notified our team directly. In the mean time, please try again.
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    accessible={true}
                    clickable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "transform": Array [
                          Object {
                            "scale": 1,
                          },
                        ],
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderRadius": 16,
                          "marginHorizontal": 16,
                          "marginVertical": 12,
                          "shadowColor": "rgba(8, 0, 20, 0.25)",
                          "shadowOffset": Object {
                            "height": 1,
                            "width": 0,
                          },
                          "shadowOpacity": 1,
                          "shadowRadius": 6,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderRadius": 16,
                            "overflow": "hidden",
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "paddingHorizontal": 16,
                              "paddingVertical": 16,
                            }
                          }
                        >
                          <View
                            flexed={false}
                            style={
                              Object {
                                "alignItems": "center",
                                "flex": null,
                                "flexDirection": "row",
                                "tintColor": "#2a4930",
                              }
                            }
                          >
                            <RNSVGSvgView
                              align="xMidYMid"
                              bbHeight={19.2}
                              bbWidth={19.2}
                              height={19.2}
                              meetOrSlice={0}
                              minX={0}
                              minY={0}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "borderWidth": 0,
                                  },
                                  undefined,
                                  null,
                                  Object {
                                    "flex": 0,
                                    "height": 19,
                                    "width": 19,
                                  },
                                ]
                              }
                              vbHeight={24}
                              vbWidth={24}
                              width={19.2}
                            >
                              <RNSVGGroup
                                fill={
                                  Array [
                                    0,
                                    4278190080,
                                  ]
                                }
                                fillOpacity={1}
                                fillRule={1}
                                font={Object {}}
                                matrix={
                                  Array [
                                    1,
                                    0,
                                    0,
                                    1,
                                    0,
                                    0,
                                  ]
                                }
                                opacity={1}
                                originX={0}
                                originY={0}
                                propList={Array []}
                                rotation={0}
                                scaleX={1}
                                scaleY={1}
                                skewX={0}
                                skewY={0}
                                stroke={null}
                                strokeDasharray={null}
                                strokeDashoffset={null}
                                strokeLinecap={0}
                                strokeLinejoin={0}
                                strokeMiterlimit={4}
                                strokeOpacity={1}
                                strokeWidth={1}
                                vectorEffect={0}
                                x={0}
                                y={0}
                              >
                                <RNSVGPath
                                  d="M21.8955 19.741l-9.091-16.3178c-.3145-.5643-1.2945-.5643-1.609 0L2.1045 19.741c-.148.2662-.138.5865.0255.8433.1655.2585.46.4157.779.4157h18.182c.319 0 .6136-.1572.778-.4148.1647-.2577.1747-.578.0265-.8442zM12 18.4235c-.5018 0-.909-.3847-.909-.8588 0-.474.4072-.8588.909-.8588.502 0 .909.3845.909.8586 0 .474-.407.8588-.909.8588zm.909-3.4353h-1.818V8.9764h1.818v6.0118z"
                                  fill={
                                    Array [
                                      0,
                                      4286940549,
                                    ]
                                  }
                                  fillOpacity={1}
                                  fillRule={1}
                                  matrix={
                                    Array [
                                      1,
                                      0,
                                      0,
                                      1,
                                      0,
                                      0,
                                    ]
                                  }
                                  opacity={1}
                                  originX={0}
                                  originY={0}
                                  propList={
                                    Array [
                                      "fill",
                                    ]
                                  }
                                  rotation={0}
                                  scaleX={1}
                                  scaleY={1}
                                  skewX={0}
                                  skewY={0}
                                  stroke={null}
                                  strokeDasharray={null}
                                  strokeDashoffset={null}
                                  strokeLinecap={0}
                                  strokeLinejoin={0}
                                  strokeMiterlimit={4}
                                  strokeOpacity={1}
                                  strokeWidth={1}
                                  vectorEffect={0}
                                  x={0}
                                  y={0}
                                />
                              </RNSVGGroup>
                            </RNSVGSvgView>
                            <View
                              style={
                                Object {
                                  "paddingHorizontal": 4,
                                }
                              }
                              withIcon="warning"
                            >
                              <Text
                                style={
                                  Object {
                                    "color": "#858585",
                                    "fontFamily": "Colfax-Bold",
                                    "fontSize": 12,
                                    "lineHeight": 17.28,
                                  }
                                }
                                tint="#858585"
                              >
                                Something went wrong
                              </Text>
                            </View>
                          </View>
                          <Text
                            style={
                              Object {
                                "color": "#505050",
                                "fontFamily": "Colfax-Bold",
                                "fontSize": 12,
                                "lineHeight": 17.28,
                              }
                            }
                          />
                          <Text
                            bold={false}
                            italic={false}
                            style={
                              Object {
                                "color": "#303030",
                                "fontFamily": "Colfax-Regular",
                                "fontSize": 16,
                                "lineHeight": 26,
                              }
                            }
                          >
                            Oh no! We're sorry! We logged your error and notified our team directly. In the mean time, please try again.
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    accessible={true}
                    clickable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "transform": Array [
                          Object {
                            "scale": 1,
                          },
                        ],
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderRadius": 16,
                          "marginHorizontal": 16,
                          "marginVertical": 12,
                          "shadowColor": "rgba(8, 0, 20, 0.25)",
                          "shadowOffset": Object {
                            "height": 1,
                            "width": 0,
                          },
                          "shadowOpacity": 1,
                          "shadowRadius": 6,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderRadius": 16,
                            "overflow": "hidden",
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "paddingHorizontal": 16,
                              "paddingVertical": 16,
                            }
                          }
                        >
                          <View
                            flexed={false}
                            style={
                              Object {
                                "alignItems": "center",
                                "flex": null,
                                "flexDirection": "row",
                                "tintColor": "#2a4930",
                              }
                            }
                          >
                            <RNSVGSvgView
                              align="xMidYMid"
                              bbHeight={19.2}
                              bbWidth={19.2}
                              height={19.2}
                              meetOrSlice={0}
                              minX={0}
                              minY={0}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "borderWidth": 0,
                                  },
                                  undefined,
                                  null,
                                  Object {
                                    "flex": 0,
                                    "height": 19,
                                    "width": 19,
                                  },
                                ]
                              }
                              vbHeight={24}
                              vbWidth={24}
                              width={19.2}
                            >
                              <RNSVGGroup
                                fill={
                                  Array [
                                    0,
                                    4278190080,
                                  ]
                                }
                                fillOpacity={1}
                                fillRule={1}
                                font={Object {}}
                                matrix={
                                  Array [
                                    1,
                                    0,
                                    0,
                                    1,
                                    0,
                                    0,
                                  ]
                                }
                                opacity={1}
                                originX={0}
                                originY={0}
                                propList={Array []}
                                rotation={0}
                                scaleX={1}
                                scaleY={1}
                                skewX={0}
                                skewY={0}
                                stroke={null}
                                strokeDasharray={null}
                                strokeDashoffset={null}
                                strokeLinecap={0}
                                strokeLinejoin={0}
                                strokeMiterlimit={4}
                                strokeOpacity={1}
                                strokeWidth={1}
                                vectorEffect={0}
                                x={0}
                                y={0}
                              >
                                <RNSVGPath
                                  d="M21.8955 19.741l-9.091-16.3178c-.3145-.5643-1.2945-.5643-1.609 0L2.1045 19.741c-.148.2662-.138.5865.0255.8433.1655.2585.46.4157.779.4157h18.182c.319 0 .6136-.1572.778-.4148.1647-.2577.1747-.578.0265-.8442zM12 18.4235c-.5018 0-.909-.3847-.909-.8588 0-.474.4072-.8588.909-.8588.502 0 .909.3845.909.8586 0 .474-.407.8588-.909.8588zm.909-3.4353h-1.818V8.9764h1.818v6.0118z"
                                  fill={
                                    Array [
                                      0,
                                      4286940549,
                                    ]
                                  }
                                  fillOpacity={1}
                                  fillRule={1}
                                  matrix={
                                    Array [
                                      1,
                                      0,
                                      0,
                                      1,
                                      0,
                                      0,
                                    ]
                                  }
                                  opacity={1}
                                  originX={0}
                                  originY={0}
                                  propList={
                                    Array [
                                      "fill",
                                    ]
                                  }
                                  rotation={0}
                                  scaleX={1}
                                  scaleY={1}
                                  skewX={0}
                                  skewY={0}
                                  stroke={null}
                                  strokeDasharray={null}
                                  strokeDashoffset={null}
                                  strokeLinecap={0}
                                  strokeLinejoin={0}
                                  strokeMiterlimit={4}
                                  strokeOpacity={1}
                                  strokeWidth={1}
                                  vectorEffect={0}
                                  x={0}
                                  y={0}
                                />
                              </RNSVGGroup>
                            </RNSVGSvgView>
                            <View
                              style={
                                Object {
                                  "paddingHorizontal": 4,
                                }
                              }
                              withIcon="warning"
                            >
                              <Text
                                style={
                                  Object {
                                    "color": "#858585",
                                    "fontFamily": "Colfax-Bold",
                                    "fontSize": 12,
                                    "lineHeight": 17.28,
                                  }
                                }
                                tint="#858585"
                              >
                                Something went wrong
                              </Text>
                            </View>
                          </View>
                          <Text
                            style={
                              Object {
                                "color": "#505050",
                                "fontFamily": "Colfax-Bold",
                                "fontSize": 12,
                                "lineHeight": 17.28,
                              }
                            }
                          />
                          <Text
                            bold={false}
                            italic={false}
                            style={
                              Object {
                                "color": "#303030",
                                "fontFamily": "Colfax-Regular",
                                "fontSize": 16,
                                "lineHeight": 26,
                              }
                            }
                          >
                            Oh no! We're sorry! We logged your error and notified our team directly. In the mean time, please try again.
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    accessible={true}
                    clickable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "transform": Array [
                          Object {
                            "scale": 1,
                          },
                        ],
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderRadius": 16,
                          "marginHorizontal": 16,
                          "marginVertical": 12,
                          "shadowColor": "rgba(8, 0, 20, 0.25)",
                          "shadowOffset": Object {
                            "height": 1,
                            "width": 0,
                          },
                          "shadowOpacity": 1,
                          "shadowRadius": 6,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderRadius": 16,
                            "overflow": "hidden",
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "paddingHorizontal": 16,
                              "paddingVertical": 16,
                            }
                          }
                        >
                          <View
                            flexed={false}
                            style={
                              Object {
                                "alignItems": "center",
                                "flex": null,
                                "flexDirection": "row",
                                "tintColor": "#2a4930",
                              }
                            }
                          >
                            <RNSVGSvgView
                              align="xMidYMid"
                              bbHeight={19.2}
                              bbWidth={19.2}
                              height={19.2}
                              meetOrSlice={0}
                              minX={0}
                              minY={0}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "borderWidth": 0,
                                  },
                                  undefined,
                                  null,
                                  Object {
                                    "flex": 0,
                                    "height": 19,
                                    "width": 19,
                                  },
                                ]
                              }
                              vbHeight={24}
                              vbWidth={24}
                              width={19.2}
                            >
                              <RNSVGGroup
                                fill={
                                  Array [
                                    0,
                                    4278190080,
                                  ]
                                }
                                fillOpacity={1}
                                fillRule={1}
                                font={Object {}}
                                matrix={
                                  Array [
                                    1,
                                    0,
                                    0,
                                    1,
                                    0,
                                    0,
                                  ]
                                }
                                opacity={1}
                                originX={0}
                                originY={0}
                                propList={Array []}
                                rotation={0}
                                scaleX={1}
                                scaleY={1}
                                skewX={0}
                                skewY={0}
                                stroke={null}
                                strokeDasharray={null}
                                strokeDashoffset={null}
                                strokeLinecap={0}
                                strokeLinejoin={0}
                                strokeMiterlimit={4}
                                strokeOpacity={1}
                                strokeWidth={1}
                                vectorEffect={0}
                                x={0}
                                y={0}
                              >
                                <RNSVGPath
                                  d="M21.8955 19.741l-9.091-16.3178c-.3145-.5643-1.2945-.5643-1.609 0L2.1045 19.741c-.148.2662-.138.5865.0255.8433.1655.2585.46.4157.779.4157h18.182c.319 0 .6136-.1572.778-.4148.1647-.2577.1747-.578.0265-.8442zM12 18.4235c-.5018 0-.909-.3847-.909-.8588 0-.474.4072-.8588.909-.8588.502 0 .909.3845.909.8586 0 .474-.407.8588-.909.8588zm.909-3.4353h-1.818V8.9764h1.818v6.0118z"
                                  fill={
                                    Array [
                                      0,
                                      4286940549,
                                    ]
                                  }
                                  fillOpacity={1}
                                  fillRule={1}
                                  matrix={
                                    Array [
                                      1,
                                      0,
                                      0,
                                      1,
                                      0,
                                      0,
                                    ]
                                  }
                                  opacity={1}
                                  originX={0}
                                  originY={0}
                                  propList={
                                    Array [
                                      "fill",
                                    ]
                                  }
                                  rotation={0}
                                  scaleX={1}
                                  scaleY={1}
                                  skewX={0}
                                  skewY={0}
                                  stroke={null}
                                  strokeDasharray={null}
                                  strokeDashoffset={null}
                                  strokeLinecap={0}
                                  strokeLinejoin={0}
                                  strokeMiterlimit={4}
                                  strokeOpacity={1}
                                  strokeWidth={1}
                                  vectorEffect={0}
                                  x={0}
                                  y={0}
                                />
                              </RNSVGGroup>
                            </RNSVGSvgView>
                            <View
                              style={
                                Object {
                                  "paddingHorizontal": 4,
                                }
                              }
                              withIcon="warning"
                            >
                              <Text
                                style={
                                  Object {
                                    "color": "#858585",
                                    "fontFamily": "Colfax-Bold",
                                    "fontSize": 12,
                                    "lineHeight": 17.28,
                                  }
                                }
                                tint="#858585"
                              >
                                Something went wrong
                              </Text>
                            </View>
                          </View>
                          <Text
                            style={
                              Object {
                                "color": "#505050",
                                "fontFamily": "Colfax-Bold",
                                "fontSize": 12,
                                "lineHeight": 17.28,
                              }
                            }
                          />
                          <Text
                            bold={false}
                            italic={false}
                            style={
                              Object {
                                "color": "#303030",
                                "fontFamily": "Colfax-Regular",
                                "fontSize": 16,
                                "lineHeight": 26,
                              }
                            }
                          >
                            Oh no! We're sorry! We logged your error and notified our team directly. In the mean time, please try again.
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </RCTScrollView>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        pointerEvents="box-none"
        style={
          Object {
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#FFF",
              "transform": Array [
                Object {
                  "translateX": 0,
                },
              ],
            }
          }
        >
          <View
            onLayout={[Function]}
            pointerEvents="box-none"
            style={
              Object {
                "backgroundColor": "#FFF",
                "borderBottomColor": "#A7A7AA",
                "borderBottomWidth": 0.5,
                "height": 64,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 20,
              }
            }
          >
            <View
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                style={
                  Object {
                    "bottom": 0,
                    "flexDirection": "row",
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "transparent",
                      "bottom": 0,
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "left": 0,
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    accessibilityTraits="header"
                    allowFontScaling={false}
                    numberOfLines={1}
                    onLayout={[Function]}
                    style={
                      Object {
                        "color": "rgba(0, 0, 0, .9)",
                        "fontSize": 17,
                        "fontWeight": "600",
                        "marginHorizontal": 16,
                        "textAlign": "center",
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`The SearchFeed component should render a loading state 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    enabled={false}
    hitSlop={
      Object {
        "right": 50,
      }
    }
    maxDeltaY={20}
    minOffsetX={5}
    onGestureEvent={[Function]}
    onHandlerStateChange={[Function]}
  >
    <View
      style={
        Object {
          "backgroundColor": "#eee",
          "flex": 1,
          "flexDirection": "column-reverse",
          "overflow": "hidden",
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          pointerEvents="auto"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "paddingTop": 64,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "transform": Array [
                Object {
                  "translateX": 0,
                },
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
        >
          <View
            accessibilityElementsHidden={false}
            style={
              Object {
                "backgroundColor": "#fff",
                "flex": 1,
              }
            }
          >
            <RCTScrollView
              ListEmptyComponent={[Function]}
              contentContainerStyle={
                Object {
                  "flex": 1,
                }
              }
              data={
                Array [
                  Object {
                    "channelType": "",
                    "coverImage": Array [],
                    "id": "fakeId0",
                    "isLoading": true,
                    "parentChannel": Object {
                      "id": "",
                      "name": "",
                    },
                    "title": "",
                  },
                  Object {
                    "channelType": "",
                    "coverImage": Array [],
                    "id": "fakeId1",
                    "isLoading": true,
                    "parentChannel": Object {
                      "id": "",
                      "name": "",
                    },
                    "title": "",
                  },
                  Object {
                    "channelType": "",
                    "coverImage": Array [],
                    "id": "fakeId2",
                    "isLoading": true,
                    "parentChannel": Object {
                      "id": "",
                      "name": "",
                    },
                    "title": "",
                  },
                  Object {
                    "channelType": "",
                    "coverImage": Array [],
                    "id": "fakeId3",
                    "isLoading": true,
                    "parentChannel": Object {
                      "id": "",
                      "name": "",
                    },
                    "title": "",
                  },
                  Object {
                    "channelType": "",
                    "coverImage": Array [],
                    "id": "fakeId4",
                    "isLoading": true,
                    "parentChannel": Object {
                      "id": "",
                      "name": "",
                    },
                    "title": "",
                  },
                  Object {
                    "channelType": "",
                    "coverImage": Array [],
                    "id": "fakeId5",
                    "isLoading": true,
                    "parentChannel": Object {
                      "id": "",
                      "name": "",
                    },
                    "title": "",
                  },
                  Object {
                    "channelType": "",
                    "coverImage": Array [],
                    "id": "fakeId6",
                    "isLoading": true,
                    "parentChannel": Object {
                      "id": "",
                      "name": "",
                    },
                    "title": "",
                  },
                  Object {
                    "channelType": "",
                    "coverImage": Array [],
                    "id": "fakeId7",
                    "isLoading": true,
                    "parentChannel": Object {
                      "id": "",
                      "name": "",
                    },
                    "title": "",
                  },
                  Object {
                    "channelType": "",
                    "coverImage": Array [],
                    "id": "fakeId8",
                    "isLoading": true,
                    "parentChannel": Object {
                      "id": "",
                      "name": "",
                    },
                    "title": "",
                  },
                  Object {
                    "channelType": "",
                    "coverImage": Array [],
                    "id": "fakeId9",
                    "isLoading": true,
                    "parentChannel": Object {
                      "id": "",
                      "name": "",
                    },
                    "title": "",
                  },
                ]
              }
              disableVirtualization={false}
              getItem={[Function]}
              getItemCount={[Function]}
              hasContent={0}
              horizontal={false}
              initialNumToRender={10}
              keyExtractor={[Function]}
              maxToRenderPerBatch={10}
              numColumns={1}
              onContentSizeChange={[Function]}
              onEndReached={[Function]}
              onEndReachedThreshold={0.7}
              onLayout={[Function]}
              onMomentumScrollEnd={[Function]}
              onPressItem={[Function]}
              onRefresh={[Function]}
              onScroll={[Function]}
              onScrollBeginDrag={[Function]}
              onScrollEndDrag={[Function]}
              refreshControl={
                <RefreshControlMock
                  onRefresh={[Function]}
                  refreshing={true}
                />
              }
              refreshing={true}
              removeClippedSubviews={false}
              renderItem={[Function]}
              scrollEventThrottle={50}
              stickyHeaderIndices={Array []}
              updateCellsBatchingPeriod={50}
              viewabilityConfigCallbackPairs={Array []}
              windowSize={21}
            >
              <RCTRefreshControl />
              <View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    accessible={true}
                    clickable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "transform": Array [
                          Object {
                            "scale": 1,
                          },
                        ],
                      }
                    }
                  >
                    <View
                      isLoading={true}
                      style={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderRadius": 16,
                          "marginHorizontal": 16,
                          "marginVertical": 12,
                          "shadowColor": "rgba(8, 0, 20, 0.25)",
                          "shadowOffset": Object {
                            "height": 1,
                            "width": 0,
                          },
                          "shadowOpacity": 1,
                          "shadowRadius": 6,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderRadius": 16,
                            "overflow": "hidden",
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "backgroundColor": "#dddddd",
                              "overflow": "hidden",
                              "width": "100%",
                            }
                          }
                        >
                          <View
                            animate={null}
                            customAnimate={null}
                            onReady={false}
                            style={
                              Object {
                                "aspectRatio": 1,
                                "backgroundColor": "#dddddd",
                                "resizeMode": "cover",
                                "width": "100%",
                              }
                            }
                          >
                            <Image
                              maxAspectRatio={1.78}
                              minAspectRatio={1.2}
                              onLoad={[Function]}
                              source={Array []}
                              style={
                                Object {
                                  "aspectRatio": 1,
                                  "backgroundColor": "#dddddd",
                                  "opacity": 0,
                                  "resizeMode": "cover",
                                  "width": "100%",
                                }
                              }
                            />
                          </View>
                          <BVLinearGradient
                            colors={
                              Array [
                                2147483648,
                                0,
                              ]
                            }
                            endPoint={
                              Object {
                                "x": 0,
                                "y": 1,
                              }
                            }
                            locations={
                              Array [
                                0,
                                1,
                              ]
                            }
                            overlayColor="#000000"
                            overlayType="gradient-top"
                            startPoint={
                              Object {
                                "x": 0,
                                "y": 0,
                              }
                            }
                            style={
                              Object {
                                "bottom": 0,
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          />
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "flex-start",
                              "paddingBottom": 32,
                              "paddingHorizontal": 24,
                              "paddingVertical": 16,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "marginBottom": 16,
                                "marginTop": -32,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "alignItems": "center",
                                  "alignSelf": "stretch",
                                  "backgroundColor": "#dddddd",
                                  "borderRadius": 16,
                                  "borderWidth": 0,
                                  "height": 32,
                                  "paddingHorizontal": 12,
                                  "width": 64,
                                }
                              }
                            />
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    accessible={true}
                    clickable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "transform": Array [
                          Object {
                            "scale": 1,
                          },
                        ],
                      }
                    }
                  >
                    <View
                      isLoading={true}
                      style={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderRadius": 16,
                          "marginHorizontal": 16,
                          "marginVertical": 12,
                          "shadowColor": "rgba(8, 0, 20, 0.25)",
                          "shadowOffset": Object {
                            "height": 1,
                            "width": 0,
                          },
                          "shadowOpacity": 1,
                          "shadowRadius": 6,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderRadius": 16,
                            "overflow": "hidden",
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "backgroundColor": "#dddddd",
                              "overflow": "hidden",
                              "width": "100%",
                            }
                          }
                        >
                          <View
                            animate={null}
                            customAnimate={null}
                            onReady={false}
                            style={
                              Object {
                                "aspectRatio": 1,
                                "backgroundColor": "#dddddd",
                                "resizeMode": "cover",
                                "width": "100%",
                              }
                            }
                          >
                            <Image
                              maxAspectRatio={1.78}
                              minAspectRatio={1.2}
                              onLoad={[Function]}
                              source={Array []}
                              style={
                                Object {
                                  "aspectRatio": 1,
                                  "backgroundColor": "#dddddd",
                                  "opacity": 0,
                                  "resizeMode": "cover",
                                  "width": "100%",
                                }
                              }
                            />
                          </View>
                          <BVLinearGradient
                            colors={
                              Array [
                                2147483648,
                                0,
                              ]
                            }
                            endPoint={
                              Object {
                                "x": 0,
                                "y": 1,
                              }
                            }
                            locations={
                              Array [
                                0,
                                1,
                              ]
                            }
                            overlayColor="#000000"
                            overlayType="gradient-top"
                            startPoint={
                              Object {
                                "x": 0,
                                "y": 0,
                              }
                            }
                            style={
                              Object {
                                "bottom": 0,
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          />
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "flex-start",
                              "paddingBottom": 32,
                              "paddingHorizontal": 24,
                              "paddingVertical": 16,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "marginBottom": 16,
                                "marginTop": -32,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "alignItems": "center",
                                  "alignSelf": "stretch",
                                  "backgroundColor": "#dddddd",
                                  "borderRadius": 16,
                                  "borderWidth": 0,
                                  "height": 32,
                                  "paddingHorizontal": 12,
                                  "width": 64,
                                }
                              }
                            />
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    accessible={true}
                    clickable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "transform": Array [
                          Object {
                            "scale": 1,
                          },
                        ],
                      }
                    }
                  >
                    <View
                      isLoading={true}
                      style={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderRadius": 16,
                          "marginHorizontal": 16,
                          "marginVertical": 12,
                          "shadowColor": "rgba(8, 0, 20, 0.25)",
                          "shadowOffset": Object {
                            "height": 1,
                            "width": 0,
                          },
                          "shadowOpacity": 1,
                          "shadowRadius": 6,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderRadius": 16,
                            "overflow": "hidden",
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "backgroundColor": "#dddddd",
                              "overflow": "hidden",
                              "width": "100%",
                            }
                          }
                        >
                          <View
                            animate={null}
                            customAnimate={null}
                            onReady={false}
                            style={
                              Object {
                                "aspectRatio": 1,
                                "backgroundColor": "#dddddd",
                                "resizeMode": "cover",
                                "width": "100%",
                              }
                            }
                          >
                            <Image
                              maxAspectRatio={1.78}
                              minAspectRatio={1.2}
                              onLoad={[Function]}
                              source={Array []}
                              style={
                                Object {
                                  "aspectRatio": 1,
                                  "backgroundColor": "#dddddd",
                                  "opacity": 0,
                                  "resizeMode": "cover",
                                  "width": "100%",
                                }
                              }
                            />
                          </View>
                          <BVLinearGradient
                            colors={
                              Array [
                                2147483648,
                                0,
                              ]
                            }
                            endPoint={
                              Object {
                                "x": 0,
                                "y": 1,
                              }
                            }
                            locations={
                              Array [
                                0,
                                1,
                              ]
                            }
                            overlayColor="#000000"
                            overlayType="gradient-top"
                            startPoint={
                              Object {
                                "x": 0,
                                "y": 0,
                              }
                            }
                            style={
                              Object {
                                "bottom": 0,
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          />
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "flex-start",
                              "paddingBottom": 32,
                              "paddingHorizontal": 24,
                              "paddingVertical": 16,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "marginBottom": 16,
                                "marginTop": -32,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "alignItems": "center",
                                  "alignSelf": "stretch",
                                  "backgroundColor": "#dddddd",
                                  "borderRadius": 16,
                                  "borderWidth": 0,
                                  "height": 32,
                                  "paddingHorizontal": 12,
                                  "width": 64,
                                }
                              }
                            />
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    accessible={true}
                    clickable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "transform": Array [
                          Object {
                            "scale": 1,
                          },
                        ],
                      }
                    }
                  >
                    <View
                      isLoading={true}
                      style={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderRadius": 16,
                          "marginHorizontal": 16,
                          "marginVertical": 12,
                          "shadowColor": "rgba(8, 0, 20, 0.25)",
                          "shadowOffset": Object {
                            "height": 1,
                            "width": 0,
                          },
                          "shadowOpacity": 1,
                          "shadowRadius": 6,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderRadius": 16,
                            "overflow": "hidden",
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "backgroundColor": "#dddddd",
                              "overflow": "hidden",
                              "width": "100%",
                            }
                          }
                        >
                          <View
                            animate={null}
                            customAnimate={null}
                            onReady={false}
                            style={
                              Object {
                                "aspectRatio": 1,
                                "backgroundColor": "#dddddd",
                                "resizeMode": "cover",
                                "width": "100%",
                              }
                            }
                          >
                            <Image
                              maxAspectRatio={1.78}
                              minAspectRatio={1.2}
                              onLoad={[Function]}
                              source={Array []}
                              style={
                                Object {
                                  "aspectRatio": 1,
                                  "backgroundColor": "#dddddd",
                                  "opacity": 0,
                                  "resizeMode": "cover",
                                  "width": "100%",
                                }
                              }
                            />
                          </View>
                          <BVLinearGradient
                            colors={
                              Array [
                                2147483648,
                                0,
                              ]
                            }
                            endPoint={
                              Object {
                                "x": 0,
                                "y": 1,
                              }
                            }
                            locations={
                              Array [
                                0,
                                1,
                              ]
                            }
                            overlayColor="#000000"
                            overlayType="gradient-top"
                            startPoint={
                              Object {
                                "x": 0,
                                "y": 0,
                              }
                            }
                            style={
                              Object {
                                "bottom": 0,
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          />
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "flex-start",
                              "paddingBottom": 32,
                              "paddingHorizontal": 24,
                              "paddingVertical": 16,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "marginBottom": 16,
                                "marginTop": -32,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "alignItems": "center",
                                  "alignSelf": "stretch",
                                  "backgroundColor": "#dddddd",
                                  "borderRadius": 16,
                                  "borderWidth": 0,
                                  "height": 32,
                                  "paddingHorizontal": 12,
                                  "width": 64,
                                }
                              }
                            />
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    accessible={true}
                    clickable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "transform": Array [
                          Object {
                            "scale": 1,
                          },
                        ],
                      }
                    }
                  >
                    <View
                      isLoading={true}
                      style={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderRadius": 16,
                          "marginHorizontal": 16,
                          "marginVertical": 12,
                          "shadowColor": "rgba(8, 0, 20, 0.25)",
                          "shadowOffset": Object {
                            "height": 1,
                            "width": 0,
                          },
                          "shadowOpacity": 1,
                          "shadowRadius": 6,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderRadius": 16,
                            "overflow": "hidden",
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "backgroundColor": "#dddddd",
                              "overflow": "hidden",
                              "width": "100%",
                            }
                          }
                        >
                          <View
                            animate={null}
                            customAnimate={null}
                            onReady={false}
                            style={
                              Object {
                                "aspectRatio": 1,
                                "backgroundColor": "#dddddd",
                                "resizeMode": "cover",
                                "width": "100%",
                              }
                            }
                          >
                            <Image
                              maxAspectRatio={1.78}
                              minAspectRatio={1.2}
                              onLoad={[Function]}
                              source={Array []}
                              style={
                                Object {
                                  "aspectRatio": 1,
                                  "backgroundColor": "#dddddd",
                                  "opacity": 0,
                                  "resizeMode": "cover",
                                  "width": "100%",
                                }
                              }
                            />
                          </View>
                          <BVLinearGradient
                            colors={
                              Array [
                                2147483648,
                                0,
                              ]
                            }
                            endPoint={
                              Object {
                                "x": 0,
                                "y": 1,
                              }
                            }
                            locations={
                              Array [
                                0,
                                1,
                              ]
                            }
                            overlayColor="#000000"
                            overlayType="gradient-top"
                            startPoint={
                              Object {
                                "x": 0,
                                "y": 0,
                              }
                            }
                            style={
                              Object {
                                "bottom": 0,
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          />
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "flex-start",
                              "paddingBottom": 32,
                              "paddingHorizontal": 24,
                              "paddingVertical": 16,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "marginBottom": 16,
                                "marginTop": -32,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "alignItems": "center",
                                  "alignSelf": "stretch",
                                  "backgroundColor": "#dddddd",
                                  "borderRadius": 16,
                                  "borderWidth": 0,
                                  "height": 32,
                                  "paddingHorizontal": 12,
                                  "width": 64,
                                }
                              }
                            />
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    accessible={true}
                    clickable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "transform": Array [
                          Object {
                            "scale": 1,
                          },
                        ],
                      }
                    }
                  >
                    <View
                      isLoading={true}
                      style={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderRadius": 16,
                          "marginHorizontal": 16,
                          "marginVertical": 12,
                          "shadowColor": "rgba(8, 0, 20, 0.25)",
                          "shadowOffset": Object {
                            "height": 1,
                            "width": 0,
                          },
                          "shadowOpacity": 1,
                          "shadowRadius": 6,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderRadius": 16,
                            "overflow": "hidden",
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "backgroundColor": "#dddddd",
                              "overflow": "hidden",
                              "width": "100%",
                            }
                          }
                        >
                          <View
                            animate={null}
                            customAnimate={null}
                            onReady={false}
                            style={
                              Object {
                                "aspectRatio": 1,
                                "backgroundColor": "#dddddd",
                                "resizeMode": "cover",
                                "width": "100%",
                              }
                            }
                          >
                            <Image
                              maxAspectRatio={1.78}
                              minAspectRatio={1.2}
                              onLoad={[Function]}
                              source={Array []}
                              style={
                                Object {
                                  "aspectRatio": 1,
                                  "backgroundColor": "#dddddd",
                                  "opacity": 0,
                                  "resizeMode": "cover",
                                  "width": "100%",
                                }
                              }
                            />
                          </View>
                          <BVLinearGradient
                            colors={
                              Array [
                                2147483648,
                                0,
                              ]
                            }
                            endPoint={
                              Object {
                                "x": 0,
                                "y": 1,
                              }
                            }
                            locations={
                              Array [
                                0,
                                1,
                              ]
                            }
                            overlayColor="#000000"
                            overlayType="gradient-top"
                            startPoint={
                              Object {
                                "x": 0,
                                "y": 0,
                              }
                            }
                            style={
                              Object {
                                "bottom": 0,
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          />
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "flex-start",
                              "paddingBottom": 32,
                              "paddingHorizontal": 24,
                              "paddingVertical": 16,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "marginBottom": 16,
                                "marginTop": -32,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "alignItems": "center",
                                  "alignSelf": "stretch",
                                  "backgroundColor": "#dddddd",
                                  "borderRadius": 16,
                                  "borderWidth": 0,
                                  "height": 32,
                                  "paddingHorizontal": 12,
                                  "width": 64,
                                }
                              }
                            />
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    accessible={true}
                    clickable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "transform": Array [
                          Object {
                            "scale": 1,
                          },
                        ],
                      }
                    }
                  >
                    <View
                      isLoading={true}
                      style={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderRadius": 16,
                          "marginHorizontal": 16,
                          "marginVertical": 12,
                          "shadowColor": "rgba(8, 0, 20, 0.25)",
                          "shadowOffset": Object {
                            "height": 1,
                            "width": 0,
                          },
                          "shadowOpacity": 1,
                          "shadowRadius": 6,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderRadius": 16,
                            "overflow": "hidden",
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "backgroundColor": "#dddddd",
                              "overflow": "hidden",
                              "width": "100%",
                            }
                          }
                        >
                          <View
                            animate={null}
                            customAnimate={null}
                            onReady={false}
                            style={
                              Object {
                                "aspectRatio": 1,
                                "backgroundColor": "#dddddd",
                                "resizeMode": "cover",
                                "width": "100%",
                              }
                            }
                          >
                            <Image
                              maxAspectRatio={1.78}
                              minAspectRatio={1.2}
                              onLoad={[Function]}
                              source={Array []}
                              style={
                                Object {
                                  "aspectRatio": 1,
                                  "backgroundColor": "#dddddd",
                                  "opacity": 0,
                                  "resizeMode": "cover",
                                  "width": "100%",
                                }
                              }
                            />
                          </View>
                          <BVLinearGradient
                            colors={
                              Array [
                                2147483648,
                                0,
                              ]
                            }
                            endPoint={
                              Object {
                                "x": 0,
                                "y": 1,
                              }
                            }
                            locations={
                              Array [
                                0,
                                1,
                              ]
                            }
                            overlayColor="#000000"
                            overlayType="gradient-top"
                            startPoint={
                              Object {
                                "x": 0,
                                "y": 0,
                              }
                            }
                            style={
                              Object {
                                "bottom": 0,
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          />
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "flex-start",
                              "paddingBottom": 32,
                              "paddingHorizontal": 24,
                              "paddingVertical": 16,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "marginBottom": 16,
                                "marginTop": -32,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "alignItems": "center",
                                  "alignSelf": "stretch",
                                  "backgroundColor": "#dddddd",
                                  "borderRadius": 16,
                                  "borderWidth": 0,
                                  "height": 32,
                                  "paddingHorizontal": 12,
                                  "width": 64,
                                }
                              }
                            />
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    accessible={true}
                    clickable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "transform": Array [
                          Object {
                            "scale": 1,
                          },
                        ],
                      }
                    }
                  >
                    <View
                      isLoading={true}
                      style={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderRadius": 16,
                          "marginHorizontal": 16,
                          "marginVertical": 12,
                          "shadowColor": "rgba(8, 0, 20, 0.25)",
                          "shadowOffset": Object {
                            "height": 1,
                            "width": 0,
                          },
                          "shadowOpacity": 1,
                          "shadowRadius": 6,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderRadius": 16,
                            "overflow": "hidden",
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "backgroundColor": "#dddddd",
                              "overflow": "hidden",
                              "width": "100%",
                            }
                          }
                        >
                          <View
                            animate={null}
                            customAnimate={null}
                            onReady={false}
                            style={
                              Object {
                                "aspectRatio": 1,
                                "backgroundColor": "#dddddd",
                                "resizeMode": "cover",
                                "width": "100%",
                              }
                            }
                          >
                            <Image
                              maxAspectRatio={1.78}
                              minAspectRatio={1.2}
                              onLoad={[Function]}
                              source={Array []}
                              style={
                                Object {
                                  "aspectRatio": 1,
                                  "backgroundColor": "#dddddd",
                                  "opacity": 0,
                                  "resizeMode": "cover",
                                  "width": "100%",
                                }
                              }
                            />
                          </View>
                          <BVLinearGradient
                            colors={
                              Array [
                                2147483648,
                                0,
                              ]
                            }
                            endPoint={
                              Object {
                                "x": 0,
                                "y": 1,
                              }
                            }
                            locations={
                              Array [
                                0,
                                1,
                              ]
                            }
                            overlayColor="#000000"
                            overlayType="gradient-top"
                            startPoint={
                              Object {
                                "x": 0,
                                "y": 0,
                              }
                            }
                            style={
                              Object {
                                "bottom": 0,
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          />
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "flex-start",
                              "paddingBottom": 32,
                              "paddingHorizontal": 24,
                              "paddingVertical": 16,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "marginBottom": 16,
                                "marginTop": -32,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "alignItems": "center",
                                  "alignSelf": "stretch",
                                  "backgroundColor": "#dddddd",
                                  "borderRadius": 16,
                                  "borderWidth": 0,
                                  "height": 32,
                                  "paddingHorizontal": 12,
                                  "width": 64,
                                }
                              }
                            />
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    accessible={true}
                    clickable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "transform": Array [
                          Object {
                            "scale": 1,
                          },
                        ],
                      }
                    }
                  >
                    <View
                      isLoading={true}
                      style={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderRadius": 16,
                          "marginHorizontal": 16,
                          "marginVertical": 12,
                          "shadowColor": "rgba(8, 0, 20, 0.25)",
                          "shadowOffset": Object {
                            "height": 1,
                            "width": 0,
                          },
                          "shadowOpacity": 1,
                          "shadowRadius": 6,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderRadius": 16,
                            "overflow": "hidden",
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "backgroundColor": "#dddddd",
                              "overflow": "hidden",
                              "width": "100%",
                            }
                          }
                        >
                          <View
                            animate={null}
                            customAnimate={null}
                            onReady={false}
                            style={
                              Object {
                                "aspectRatio": 1,
                                "backgroundColor": "#dddddd",
                                "resizeMode": "cover",
                                "width": "100%",
                              }
                            }
                          >
                            <Image
                              maxAspectRatio={1.78}
                              minAspectRatio={1.2}
                              onLoad={[Function]}
                              source={Array []}
                              style={
                                Object {
                                  "aspectRatio": 1,
                                  "backgroundColor": "#dddddd",
                                  "opacity": 0,
                                  "resizeMode": "cover",
                                  "width": "100%",
                                }
                              }
                            />
                          </View>
                          <BVLinearGradient
                            colors={
                              Array [
                                2147483648,
                                0,
                              ]
                            }
                            endPoint={
                              Object {
                                "x": 0,
                                "y": 1,
                              }
                            }
                            locations={
                              Array [
                                0,
                                1,
                              ]
                            }
                            overlayColor="#000000"
                            overlayType="gradient-top"
                            startPoint={
                              Object {
                                "x": 0,
                                "y": 0,
                              }
                            }
                            style={
                              Object {
                                "bottom": 0,
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          />
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "flex-start",
                              "paddingBottom": 32,
                              "paddingHorizontal": 24,
                              "paddingVertical": 16,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "marginBottom": 16,
                                "marginTop": -32,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "alignItems": "center",
                                  "alignSelf": "stretch",
                                  "backgroundColor": "#dddddd",
                                  "borderRadius": 16,
                                  "borderWidth": 0,
                                  "height": 32,
                                  "paddingHorizontal": 12,
                                  "width": 64,
                                }
                              }
                            />
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    accessible={true}
                    clickable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "transform": Array [
                          Object {
                            "scale": 1,
                          },
                        ],
                      }
                    }
                  >
                    <View
                      isLoading={true}
                      style={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderRadius": 16,
                          "marginHorizontal": 16,
                          "marginVertical": 12,
                          "shadowColor": "rgba(8, 0, 20, 0.25)",
                          "shadowOffset": Object {
                            "height": 1,
                            "width": 0,
                          },
                          "shadowOpacity": 1,
                          "shadowRadius": 6,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderRadius": 16,
                            "overflow": "hidden",
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "backgroundColor": "#dddddd",
                              "overflow": "hidden",
                              "width": "100%",
                            }
                          }
                        >
                          <View
                            animate={null}
                            customAnimate={null}
                            onReady={false}
                            style={
                              Object {
                                "aspectRatio": 1,
                                "backgroundColor": "#dddddd",
                                "resizeMode": "cover",
                                "width": "100%",
                              }
                            }
                          >
                            <Image
                              maxAspectRatio={1.78}
                              minAspectRatio={1.2}
                              onLoad={[Function]}
                              source={Array []}
                              style={
                                Object {
                                  "aspectRatio": 1,
                                  "backgroundColor": "#dddddd",
                                  "opacity": 0,
                                  "resizeMode": "cover",
                                  "width": "100%",
                                }
                              }
                            />
                          </View>
                          <BVLinearGradient
                            colors={
                              Array [
                                2147483648,
                                0,
                              ]
                            }
                            endPoint={
                              Object {
                                "x": 0,
                                "y": 1,
                              }
                            }
                            locations={
                              Array [
                                0,
                                1,
                              ]
                            }
                            overlayColor="#000000"
                            overlayType="gradient-top"
                            startPoint={
                              Object {
                                "x": 0,
                                "y": 0,
                              }
                            }
                            style={
                              Object {
                                "bottom": 0,
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          />
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "flex-start",
                              "paddingBottom": 32,
                              "paddingHorizontal": 24,
                              "paddingVertical": 16,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "marginBottom": 16,
                                "marginTop": -32,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "alignItems": "center",
                                  "alignSelf": "stretch",
                                  "backgroundColor": "#dddddd",
                                  "borderRadius": 16,
                                  "borderWidth": 0,
                                  "height": 32,
                                  "paddingHorizontal": 12,
                                  "width": 64,
                                }
                              }
                            />
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </RCTScrollView>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        pointerEvents="box-none"
        style={
          Object {
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#FFF",
              "transform": Array [
                Object {
                  "translateX": 0,
                },
              ],
            }
          }
        >
          <View
            onLayout={[Function]}
            pointerEvents="box-none"
            style={
              Object {
                "backgroundColor": "#FFF",
                "borderBottomColor": "#A7A7AA",
                "borderBottomWidth": 0.5,
                "height": 64,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 20,
              }
            }
          >
            <View
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                style={
                  Object {
                    "bottom": 0,
                    "flexDirection": "row",
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "transparent",
                      "bottom": 0,
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "left": 0,
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    accessibilityTraits="header"
                    allowFontScaling={false}
                    numberOfLines={1}
                    onLayout={[Function]}
                    style={
                      Object {
                        "color": "rgba(0, 0, 0, .9)",
                        "fontSize": 17,
                        "fontWeight": "600",
                        "marginHorizontal": 16,
                        "textAlign": "center",
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`The SearchFeed component should render an empty state 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    enabled={false}
    hitSlop={
      Object {
        "right": 50,
      }
    }
    maxDeltaY={20}
    minOffsetX={5}
    onGestureEvent={[Function]}
    onHandlerStateChange={[Function]}
  >
    <View
      style={
        Object {
          "backgroundColor": "#eee",
          "flex": 1,
          "flexDirection": "column-reverse",
          "overflow": "hidden",
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          pointerEvents="auto"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "paddingTop": 64,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "transform": Array [
                Object {
                  "translateX": 0,
                },
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
        >
          <View
            accessibilityElementsHidden={false}
            style={
              Object {
                "backgroundColor": "#fff",
                "flex": 1,
              }
            }
          >
            <RCTScrollView
              ListEmptyComponent={[Function]}
              contentContainerStyle={
                Object {
                  "flex": 1,
                }
              }
              data={Array []}
              disableVirtualization={false}
              getItem={[Function]}
              getItemCount={[Function]}
              hasContent={0}
              horizontal={false}
              initialNumToRender={10}
              keyExtractor={[Function]}
              maxToRenderPerBatch={10}
              numColumns={1}
              onContentSizeChange={[Function]}
              onEndReachedThreshold={0.7}
              onLayout={[Function]}
              onMomentumScrollEnd={[Function]}
              onPressItem={[Function]}
              onRefresh={[Function]}
              onScroll={[Function]}
              onScrollBeginDrag={[Function]}
              onScrollEndDrag={[Function]}
              refreshControl={
                <RefreshControlMock
                  onRefresh={[Function]}
                  refreshing={false}
                />
              }
              refreshing={false}
              removeClippedSubviews={false}
              renderItem={[Function]}
              scrollEventThrottle={50}
              stickyHeaderIndices={Array []}
              updateCellsBatchingPeriod={50}
              viewabilityConfigCallbackPairs={Array []}
              windowSize={21}
            >
              <RCTRefreshControl />
              <View>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flex": 1,
                      "justifyContent": "center",
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "paddingHorizontal": 16,
                        "paddingVertical": 0,
                      }
                    }
                    vertical={false}
                  >
                    <RNSVGSvgView
                      align="xMidYMid"
                      bbHeight={32}
                      bbWidth={32}
                      height={32}
                      meetOrSlice={0}
                      minX={0}
                      minY={0}
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "borderWidth": 0,
                          },
                          Object {
                            "marginRight": 8,
                          },
                          null,
                          Object {
                            "flex": 0,
                            "height": 32,
                            "width": 32,
                          },
                        ]
                      }
                      vbHeight={32}
                      vbWidth={32}
                      width={32}
                    >
                      <RNSVGGroup
                        fill={
                          Array [
                            0,
                            4278190080,
                          ]
                        }
                        fillOpacity={1}
                        fillRule={1}
                        font={Object {}}
                        matrix={
                          Array [
                            1,
                            0,
                            0,
                            1,
                            0,
                            0,
                          ]
                        }
                        opacity={1}
                        originX={0}
                        originY={0}
                        propList={Array []}
                        rotation={0}
                        scaleX={1}
                        scaleY={1}
                        skewX={0}
                        skewY={0}
                        stroke={null}
                        strokeDasharray={null}
                        strokeDashoffset={null}
                        strokeLinecap={0}
                        strokeLinejoin={0}
                        strokeMiterlimit={4}
                        strokeOpacity={1}
                        strokeWidth={1}
                        vectorEffect={0}
                        x={0}
                        y={0}
                      >
                        <RNSVGPath
                          d="M27 14h5c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2v0zM27 14c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2v0 14c0 1.112-0.895 2-2 2-1.112 0-2-0.896-2-2.001v-1.494c0-0.291 0.224-0.505 0.5-0.505 0.268 0 0.5 0.226 0.5 0.505v1.505c0 0.547 0.444 0.991 1 0.991 0.552 0 1-0.451 1-0.991v-14.009c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2c0-5.415 6.671-9.825 15-9.995v-1.506c0-0.283 0.224-0.499 0.5-0.499 0.268 0 0.5 0.224 0.5 0.499v1.506c8.329 0.17 15 4.58 15 9.995h-5z"
                          fill={
                            Array [
                              0,
                              4286940549,
                            ]
                          }
                          fillOpacity={1}
                          fillRule={1}
                          matrix={
                            Array [
                              1,
                              0,
                              0,
                              1,
                              0,
                              0,
                            ]
                          }
                          opacity={1}
                          originX={0}
                          originY={0}
                          propList={
                            Array [
                              "fill",
                            ]
                          }
                          rotation={0}
                          scaleX={1}
                          scaleY={1}
                          skewX={0}
                          skewY={0}
                          stroke={null}
                          strokeDasharray={null}
                          strokeDashoffset={null}
                          strokeLinecap={0}
                          strokeLinejoin={0}
                          strokeMiterlimit={4}
                          strokeOpacity={1}
                          strokeWidth={1}
                          vectorEffect={0}
                          x={0}
                          y={0}
                        />
                      </RNSVGGroup>
                    </RNSVGSvgView>
                    <Text
                      padded={true}
                      style={
                        Object {
                          "color": "#858585",
                          "fontFamily": "Colfax-Bold",
                          "fontSize": 16,
                          "lineHeight": 23.04,
                          "paddingBottom": 11.52,
                          "paddingTop": 15.21,
                          "textAlign": "center",
                        }
                      }
                    >
                      Uh Oh!
                    </Text>
                  </View>
                  <View
                    style={
                      Object {
                        "paddingHorizontal": 16,
                        "paddingVertical": 0,
                      }
                    }
                    vertical={false}
                  >
                    <Text
                      bold={false}
                      italic={false}
                      style={
                        Object {
                          "color": "#858585",
                          "fontFamily": "Colfax-Regular",
                          "fontSize": 14,
                          "lineHeight": 20,
                          "textAlign": "center",
                        }
                      }
                    >
                      Looks like we couldn't find anything for 
                      <Text
                        bold={true}
                        italic={false}
                        style={
                          Object {
                            "color": "#858585",
                            "fontFamily": "Colfax-Bold",
                            "fontSize": 14,
                            "lineHeight": 20,
                            "textAlign": "center",
                          }
                        }
                      >
                        "No results here."
                      </Text>
                       Try searching for something else!
                    </Text>
                  </View>
                </View>
              </View>
            </RCTScrollView>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        pointerEvents="box-none"
        style={
          Object {
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#FFF",
              "transform": Array [
                Object {
                  "translateX": 0,
                },
              ],
            }
          }
        >
          <View
            onLayout={[Function]}
            pointerEvents="box-none"
            style={
              Object {
                "backgroundColor": "#FFF",
                "borderBottomColor": "#A7A7AA",
                "borderBottomWidth": 0.5,
                "height": 64,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 20,
              }
            }
          >
            <View
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                style={
                  Object {
                    "bottom": 0,
                    "flexDirection": "row",
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "transparent",
                      "bottom": 0,
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "left": 0,
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    accessibilityTraits="header"
                    allowFontScaling={false}
                    numberOfLines={1}
                    onLayout={[Function]}
                    style={
                      Object {
                        "color": "rgba(0, 0, 0, .9)",
                        "fontSize": 17,
                        "fontWeight": "600",
                        "marginHorizontal": 16,
                        "textAlign": "center",
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
